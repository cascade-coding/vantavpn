(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();var O3=!1,Z3=!1,B=[],k3=-1;function W2(e){U2(e)}function U2(e){B.includes(e)||B.push(e),Y2()}function J2(e){let t=B.indexOf(e);t!==-1&&t>k3&&B.splice(t,1)}function Y2(){!Z3&&!O3&&(O3=!0,queueMicrotask(G2))}function G2(){O3=!1,Z3=!0;for(let e=0;e<B.length;e++)B[e](),k3=e;B.length=0,k3=-1,Z3=!1}var z,j,q,O1,$3=!0;function X2(e){$3=!1,e(),$3=!0}function Q2(e){z=e.reactive,q=e.release,j=t=>e.effect(t,{scheduler:n=>{$3?W2(n):n()}}),O1=e.raw}function _1(e){j=e}function e4(e){let t=()=>{};return[r=>{let i=j(r);return e._x_effects||(e._x_effects=new Set,e._x_runEffects=()=>{e._x_effects.forEach(o=>o())}),e._x_effects.add(i),t=()=>{i!==void 0&&(e._x_effects.delete(i),q(i))},i},()=>{t()}]}function Z1(e,t){let n=!0,r,i=j(()=>{let o=e();JSON.stringify(o),n?r=o:queueMicrotask(()=>{t(o,r),r=o}),n=!1});return()=>q(i)}var k1=[],$1=[],B1=[];function t4(e){B1.push(e)}function U3(e,t){typeof t=="function"?(e._x_cleanups||(e._x_cleanups=[]),e._x_cleanups.push(t)):(t=e,$1.push(t))}function T1(e){k1.push(e)}function F1(e,t,n){e._x_attributeCleanups||(e._x_attributeCleanups={}),e._x_attributeCleanups[t]||(e._x_attributeCleanups[t]=[]),e._x_attributeCleanups[t].push(n)}function I1(e,t){e._x_attributeCleanups&&Object.entries(e._x_attributeCleanups).forEach(([n,r])=>{(t===void 0||t.includes(n))&&(r.forEach(i=>i()),delete e._x_attributeCleanups[n])})}function n4(e){for(e._x_effects?.forEach(J2);e._x_cleanups?.length;)e._x_cleanups.pop()()}var J3=new MutationObserver(Q3),Y3=!1;function G3(){J3.observe(document,{subtree:!0,childList:!0,attributes:!0,attributeOldValue:!0}),Y3=!0}function P1(){r4(),J3.disconnect(),Y3=!1}var G=[];function r4(){let e=J3.takeRecords();G.push(()=>e.length>0&&Q3(e));let t=G.length;queueMicrotask(()=>{if(G.length===t)for(;G.length>0;)G.shift()()})}function _(e){if(!Y3)return e();P1();let t=e();return G3(),t}var X3=!1,h3=[];function i4(){X3=!0}function o4(){X3=!1,Q3(h3),h3=[]}function Q3(e){if(X3){h3=h3.concat(e);return}let t=[],n=new Set,r=new Map,i=new Map;for(let o=0;o<e.length;o++)if(!e[o].target._x_ignoreMutationObserver&&(e[o].type==="childList"&&(e[o].removedNodes.forEach(s=>{s.nodeType===1&&s._x_marker&&n.add(s)}),e[o].addedNodes.forEach(s=>{if(s.nodeType===1){if(n.has(s)){n.delete(s);return}s._x_marker||t.push(s)}})),e[o].type==="attributes")){let s=e[o].target,a=e[o].attributeName,l=e[o].oldValue,c=()=>{r.has(s)||r.set(s,[]),r.get(s).push({name:a,value:s.getAttribute(a)})},u=()=>{i.has(s)||i.set(s,[]),i.get(s).push(a)};s.hasAttribute(a)&&l===null?c():s.hasAttribute(a)?(u(),c()):u()}i.forEach((o,s)=>{I1(s,o)}),r.forEach((o,s)=>{k1.forEach(a=>a(s,o))});for(let o of n)t.some(s=>s.contains(o))||$1.forEach(s=>s(o));for(let o of t)o.isConnected&&B1.forEach(s=>s(o));t=null,n=null,r=null,i=null}function j1(e){return o3(D(e))}function i3(e,t,n){return e._x_dataStack=[t,...D(n||e)],()=>{e._x_dataStack=e._x_dataStack.filter(r=>r!==t)}}function D(e){return e._x_dataStack?e._x_dataStack:typeof ShadowRoot=="function"&&e instanceof ShadowRoot?D(e.host):e.parentNode?D(e.parentNode):[]}function o3(e){return new Proxy({objects:e},s4)}var s4={ownKeys({objects:e}){return Array.from(new Set(e.flatMap(t=>Object.keys(t))))},has({objects:e},t){return t==Symbol.unscopables?!1:e.some(n=>Object.prototype.hasOwnProperty.call(n,t)||Reflect.has(n,t))},get({objects:e},t,n){return t=="toJSON"?a4:Reflect.get(e.find(r=>Reflect.has(r,t))||{},t,n)},set({objects:e},t,n,r){const i=e.find(s=>Object.prototype.hasOwnProperty.call(s,t))||e[e.length-1],o=Object.getOwnPropertyDescriptor(i,t);return o?.set&&o?.get?o.set.call(r,n)||!0:Reflect.set(i,t,n)}};function a4(){return Reflect.ownKeys(this).reduce((t,n)=>(t[n]=Reflect.get(this,n),t),{})}function R1(e){let t=r=>typeof r=="object"&&!Array.isArray(r)&&r!==null,n=(r,i="")=>{Object.entries(Object.getOwnPropertyDescriptors(r)).forEach(([o,{value:s,enumerable:a}])=>{if(a===!1||s===void 0||typeof s=="object"&&s!==null&&s.__v_skip)return;let l=i===""?o:`${i}.${o}`;typeof s=="object"&&s!==null&&s._x_interceptor?r[o]=s.initialize(e,l,o):t(s)&&s!==r&&!(s instanceof Element)&&n(s,l)})};return n(e)}function D1(e,t=()=>{}){let n={initialValue:void 0,_x_interceptor:!0,initialize(r,i,o){return e(this.initialValue,()=>l4(r,i),s=>B3(r,i,s),i,o)}};return t(n),r=>{if(typeof r=="object"&&r!==null&&r._x_interceptor){let i=n.initialize.bind(n);n.initialize=(o,s,a)=>{let l=r.initialize(o,s,a);return n.initialValue=l,i(o,s,a)}}else n.initialValue=r;return n}}function l4(e,t){return t.split(".").reduce((n,r)=>n[r],e)}function B3(e,t,n){if(typeof t=="string"&&(t=t.split(".")),t.length===1)e[t[0]]=n;else{if(t.length===0)throw error;return e[t[0]]||(e[t[0]]={}),B3(e[t[0]],t.slice(1),n)}}var N1={};function M(e,t){N1[e]=t}function T3(e,t){let n=c4(t);return Object.entries(N1).forEach(([r,i])=>{Object.defineProperty(e,`$${r}`,{get(){return i(t,n)},enumerable:!1})}),e}function c4(e){let[t,n]=J1(e),r={interceptor:D1,...t};return U3(e,n),r}function u4(e,t,n,...r){try{return n(...r)}catch(i){r3(i,e,t)}}function r3(e,t,n=void 0){e=Object.assign(e??{message:"No error message given."},{el:t,expression:n}),console.warn(`Alpine Expression Error: ${e.message}

${n?'Expression: "'+n+`"

`:""}`,t),setTimeout(()=>{throw e},0)}var d3=!0;function K1(e){let t=d3;d3=!1;let n=e();return d3=t,n}function T(e,t,n={}){let r;return L(e,t)(i=>r=i,n),r}function L(...e){return z1(...e)}var z1=q1;function f4(e){z1=e}function q1(e,t){let n={};T3(n,e);let r=[n,...D(e)],i=typeof t=="function"?C4(r,t):p4(r,t,e);return u4.bind(null,e,t,i)}function C4(e,t){return(n=()=>{},{scope:r={},params:i=[]}={})=>{let o=t.apply(o3([r,...e]),i);_3(n,o)}}var E3={};function d4(e,t){if(E3[e])return E3[e];let n=Object.getPrototypeOf(async function(){}).constructor,r=/^[\n\s]*if.*\(.*\)/.test(e.trim())||/^(let|const)\s/.test(e.trim())?`(async()=>{ ${e} })()`:e,o=(()=>{try{let s=new n(["__self","scope"],`with (scope) { __self.result = ${r} }; __self.finished = true; return __self.result;`);return Object.defineProperty(s,"name",{value:`[Alpine] ${e}`}),s}catch(s){return r3(s,t,e),Promise.resolve()}})();return E3[e]=o,o}function p4(e,t,n){let r=d4(t,n);return(i=()=>{},{scope:o={},params:s=[]}={})=>{r.result=void 0,r.finished=!1;let a=o3([o,...e]);if(typeof r=="function"){let l=r(r,a).catch(c=>r3(c,n,t));r.finished?(_3(i,r.result,a,s,n),r.result=void 0):l.then(c=>{_3(i,c,a,s,n)}).catch(c=>r3(c,n,t)).finally(()=>r.result=void 0)}}}function _3(e,t,n,r,i){if(d3&&typeof t=="function"){let o=t.apply(n,r);o instanceof Promise?o.then(s=>_3(e,s,n,r)).catch(s=>r3(s,i,t)):e(o)}else typeof t=="object"&&t instanceof Promise?t.then(o=>e(o)):e(t)}var e1="x-";function W(e=""){return e1+e}function h4(e){e1=e}var g3={};function w(e,t){return g3[e]=t,{before(n){if(!g3[n]){console.warn(String.raw`Cannot find directive \`${n}\`. \`${e}\` will use the default order of execution`);return}const r=$.indexOf(n);$.splice(r>=0?r:$.indexOf("DEFAULT"),0,e)}}}function _4(e){return Object.keys(g3).includes(e)}function t1(e,t,n){if(t=Array.from(t),e._x_virtualDirectives){let o=Object.entries(e._x_virtualDirectives).map(([a,l])=>({name:a,value:l})),s=W1(o);o=o.map(a=>s.find(l=>l.name===a.name)?{name:`x-bind:${a.name}`,value:`"${a.value}"`}:a),t=t.concat(o)}let r={};return t.map(X1((o,s)=>r[o]=s)).filter(e2).map(v4(r,n)).sort(x4).map(o=>w4(e,o))}function W1(e){return Array.from(e).map(X1()).filter(t=>!e2(t))}var F3=!1,e3=new Map,U1=Symbol();function g4(e){F3=!0;let t=Symbol();U1=t,e3.set(t,[]);let n=()=>{for(;e3.get(t).length;)e3.get(t).shift()();e3.delete(t)},r=()=>{F3=!1,n()};e(n),r()}function J1(e){let t=[],n=a=>t.push(a),[r,i]=e4(e);return t.push(i),[{Alpine:s3,effect:r,cleanup:n,evaluateLater:L.bind(L,e),evaluate:T.bind(T,e)},()=>t.forEach(a=>a())]}function w4(e,t){let n=()=>{},r=g3[t.type]||n,[i,o]=J1(e);F1(e,t.original,o);let s=()=>{e._x_ignore||e._x_ignoreSelf||(r.inline&&r.inline(e,t,i),r=r.bind(r,e,t,i),F3?e3.get(U1).push(r):r())};return s.runCleanups=o,s}var Y1=(e,t)=>({name:n,value:r})=>(n.startsWith(e)&&(n=n.replace(e,t)),{name:n,value:r}),G1=e=>e;function X1(e=()=>{}){return({name:t,value:n})=>{let{name:r,value:i}=Q1.reduce((o,s)=>s(o),{name:t,value:n});return r!==t&&e(r,t),{name:r,value:i}}}var Q1=[];function n1(e){Q1.push(e)}function e2({name:e}){return t2().test(e)}var t2=()=>new RegExp(`^${e1}([^:^.]+)\\b`);function v4(e,t){return({name:n,value:r})=>{let i=n.match(t2()),o=n.match(/:([a-zA-Z0-9\-_:]+)/),s=n.match(/\.[^.\]]+(?=[^\]]*$)/g)||[],a=t||e[n]||n;return{type:i?i[1]:null,value:o?o[1]:null,modifiers:s.map(l=>l.replace(".","")),expression:r,original:a}}}var I3="DEFAULT",$=["ignore","ref","data","id","anchor","bind","init","for","model","modelable","transition","show","if",I3,"teleport"];function x4(e,t){let n=$.indexOf(e.type)===-1?I3:e.type,r=$.indexOf(t.type)===-1?I3:t.type;return $.indexOf(n)-$.indexOf(r)}function t3(e,t,n={}){e.dispatchEvent(new CustomEvent(t,{detail:n,bubbles:!0,composed:!0,cancelable:!0}))}function P(e,t){if(typeof ShadowRoot=="function"&&e instanceof ShadowRoot){Array.from(e.children).forEach(i=>P(i,t));return}let n=!1;if(t(e,()=>n=!0),n)return;let r=e.firstElementChild;for(;r;)P(r,t),r=r.nextElementSibling}function y(e,...t){console.warn(`Alpine Warning: ${e}`,...t)}var g1=!1;function L4(){g1&&y("Alpine has already been initialized on this page. Calling Alpine.start() more than once can cause problems."),g1=!0,document.body||y("Unable to initialize. Trying to load Alpine before `<body>` is available. Did you forget to add `defer` in Alpine's `<script>` tag?"),t3(document,"alpine:init"),t3(document,"alpine:initializing"),G3(),t4(t=>A(t,P)),U3(t=>J(t)),T1((t,n)=>{t1(t,n).forEach(r=>r())});let e=t=>!v3(t.parentElement,!0);Array.from(document.querySelectorAll(i2().join(","))).filter(e).forEach(t=>{A(t)}),t3(document,"alpine:initialized"),setTimeout(()=>{M4()})}var r1=[],n2=[];function r2(){return r1.map(e=>e())}function i2(){return r1.concat(n2).map(e=>e())}function o2(e){r1.push(e)}function s2(e){n2.push(e)}function v3(e,t=!1){return U(e,n=>{if((t?i2():r2()).some(i=>n.matches(i)))return!0})}function U(e,t){if(e){if(t(e))return e;if(e._x_teleportBack&&(e=e._x_teleportBack),!!e.parentElement)return U(e.parentElement,t)}}function m4(e){return r2().some(t=>e.matches(t))}var a2=[];function y4(e){a2.push(e)}var b4=1;function A(e,t=P,n=()=>{}){U(e,r=>r._x_ignore)||g4(()=>{t(e,(r,i)=>{r._x_marker||(n(r,i),a2.forEach(o=>o(r,i)),t1(r,r.attributes).forEach(o=>o()),r._x_ignore||(r._x_marker=b4++),r._x_ignore&&i())})})}function J(e,t=P){t(e,n=>{n4(n),I1(n),delete n._x_marker})}function M4(){[["ui","dialog",["[x-dialog], [x-popover]"]],["anchor","anchor",["[x-anchor]"]],["sort","sort",["[x-sort]"]]].forEach(([t,n,r])=>{_4(n)||r.some(i=>{if(document.querySelector(i))return y(`found "${i}", but missing ${t} plugin`),!0})})}var P3=[],i1=!1;function o1(e=()=>{}){return queueMicrotask(()=>{i1||setTimeout(()=>{j3()})}),new Promise(t=>{P3.push(()=>{e(),t()})})}function j3(){for(i1=!1;P3.length;)P3.shift()()}function E4(){i1=!0}function s1(e,t){return Array.isArray(t)?w1(e,t.join(" ")):typeof t=="object"&&t!==null?A4(e,t):typeof t=="function"?s1(e,t()):w1(e,t)}function w1(e,t){let n=i=>i.split(" ").filter(o=>!e.classList.contains(o)).filter(Boolean),r=i=>(e.classList.add(...i),()=>{e.classList.remove(...i)});return t=t===!0?t="":t||"",r(n(t))}function A4(e,t){let n=a=>a.split(" ").filter(Boolean),r=Object.entries(t).flatMap(([a,l])=>l?n(a):!1).filter(Boolean),i=Object.entries(t).flatMap(([a,l])=>l?!1:n(a)).filter(Boolean),o=[],s=[];return i.forEach(a=>{e.classList.contains(a)&&(e.classList.remove(a),s.push(a))}),r.forEach(a=>{e.classList.contains(a)||(e.classList.add(a),o.push(a))}),()=>{s.forEach(a=>e.classList.add(a)),o.forEach(a=>e.classList.remove(a))}}function x3(e,t){return typeof t=="object"&&t!==null?S4(e,t):H4(e,t)}function S4(e,t){let n={};return Object.entries(t).forEach(([r,i])=>{n[r]=e.style[r],r.startsWith("--")||(r=V4(r)),e.style.setProperty(r,i)}),setTimeout(()=>{e.style.length===0&&e.removeAttribute("style")}),()=>{x3(e,n)}}function H4(e,t){let n=e.getAttribute("style",t);return e.setAttribute("style",t),()=>{e.setAttribute("style",n||"")}}function V4(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function R3(e,t=()=>{}){let n=!1;return function(){n?t.apply(this,arguments):(n=!0,e.apply(this,arguments))}}w("transition",(e,{value:t,modifiers:n,expression:r},{evaluate:i})=>{typeof r=="function"&&(r=i(r)),r!==!1&&(!r||typeof r=="boolean"?Z4(e,n,t):O4(e,r,t))});function O4(e,t,n){l2(e,s1,""),{enter:i=>{e._x_transition.enter.during=i},"enter-start":i=>{e._x_transition.enter.start=i},"enter-end":i=>{e._x_transition.enter.end=i},leave:i=>{e._x_transition.leave.during=i},"leave-start":i=>{e._x_transition.leave.start=i},"leave-end":i=>{e._x_transition.leave.end=i}}[n](t)}function Z4(e,t,n){l2(e,x3);let r=!t.includes("in")&&!t.includes("out")&&!n,i=r||t.includes("in")||["enter"].includes(n),o=r||t.includes("out")||["leave"].includes(n);t.includes("in")&&!r&&(t=t.filter((h,g)=>g<t.indexOf("out"))),t.includes("out")&&!r&&(t=t.filter((h,g)=>g>t.indexOf("out")));let s=!t.includes("opacity")&&!t.includes("scale"),a=s||t.includes("opacity"),l=s||t.includes("scale"),c=a?0:1,u=l?X(t,"scale",95)/100:1,C=X(t,"delay",0)/1e3,d=X(t,"origin","center"),v="opacity, transform",S=X(t,"duration",150)/1e3,a3=X(t,"duration",75)/1e3,f="cubic-bezier(0.4, 0.0, 0.2, 1)";i&&(e._x_transition.enter.during={transformOrigin:d,transitionDelay:`${C}s`,transitionProperty:v,transitionDuration:`${S}s`,transitionTimingFunction:f},e._x_transition.enter.start={opacity:c,transform:`scale(${u})`},e._x_transition.enter.end={opacity:1,transform:"scale(1)"}),o&&(e._x_transition.leave.during={transformOrigin:d,transitionDelay:`${C}s`,transitionProperty:v,transitionDuration:`${a3}s`,transitionTimingFunction:f},e._x_transition.leave.start={opacity:1,transform:"scale(1)"},e._x_transition.leave.end={opacity:c,transform:`scale(${u})`})}function l2(e,t,n={}){e._x_transition||(e._x_transition={enter:{during:n,start:n,end:n},leave:{during:n,start:n,end:n},in(r=()=>{},i=()=>{}){D3(e,t,{during:this.enter.during,start:this.enter.start,end:this.enter.end},r,i)},out(r=()=>{},i=()=>{}){D3(e,t,{during:this.leave.during,start:this.leave.start,end:this.leave.end},r,i)}})}window.Element.prototype._x_toggleAndCascadeWithTransitions=function(e,t,n,r){const i=document.visibilityState==="visible"?requestAnimationFrame:setTimeout;let o=()=>i(n);if(t){e._x_transition&&(e._x_transition.enter||e._x_transition.leave)?e._x_transition.enter&&(Object.entries(e._x_transition.enter.during).length||Object.entries(e._x_transition.enter.start).length||Object.entries(e._x_transition.enter.end).length)?e._x_transition.in(n):o():e._x_transition?e._x_transition.in(n):o();return}e._x_hidePromise=e._x_transition?new Promise((s,a)=>{e._x_transition.out(()=>{},()=>s(r)),e._x_transitioning&&e._x_transitioning.beforeCancel(()=>a({isFromCancelledTransition:!0}))}):Promise.resolve(r),queueMicrotask(()=>{let s=c2(e);s?(s._x_hideChildren||(s._x_hideChildren=[]),s._x_hideChildren.push(e)):i(()=>{let a=l=>{let c=Promise.all([l._x_hidePromise,...(l._x_hideChildren||[]).map(a)]).then(([u])=>u?.());return delete l._x_hidePromise,delete l._x_hideChildren,c};a(e).catch(l=>{if(!l.isFromCancelledTransition)throw l})})})};function c2(e){let t=e.parentNode;if(t)return t._x_hidePromise?t:c2(t)}function D3(e,t,{during:n,start:r,end:i}={},o=()=>{},s=()=>{}){if(e._x_transitioning&&e._x_transitioning.cancel(),Object.keys(n).length===0&&Object.keys(r).length===0&&Object.keys(i).length===0){o(),s();return}let a,l,c;k4(e,{start(){a=t(e,r)},during(){l=t(e,n)},before:o,end(){a(),c=t(e,i)},after:s,cleanup(){l(),c()}})}function k4(e,t){let n,r,i,o=R3(()=>{_(()=>{n=!0,r||t.before(),i||(t.end(),j3()),t.after(),e.isConnected&&t.cleanup(),delete e._x_transitioning})});e._x_transitioning={beforeCancels:[],beforeCancel(s){this.beforeCancels.push(s)},cancel:R3(function(){for(;this.beforeCancels.length;)this.beforeCancels.shift()();o()}),finish:o},_(()=>{t.start(),t.during()}),E4(),requestAnimationFrame(()=>{if(n)return;let s=Number(getComputedStyle(e).transitionDuration.replace(/,.*/,"").replace("s",""))*1e3,a=Number(getComputedStyle(e).transitionDelay.replace(/,.*/,"").replace("s",""))*1e3;s===0&&(s=Number(getComputedStyle(e).animationDuration.replace("s",""))*1e3),_(()=>{t.before()}),r=!0,requestAnimationFrame(()=>{n||(_(()=>{t.end()}),j3(),setTimeout(e._x_transitioning.finish,s+a),i=!0)})})}function X(e,t,n){if(e.indexOf(t)===-1)return n;const r=e[e.indexOf(t)+1];if(!r||t==="scale"&&isNaN(r))return n;if(t==="duration"||t==="delay"){let i=r.match(/([0-9]+)ms/);if(i)return i[1]}return t==="origin"&&["top","right","left","center","bottom"].includes(e[e.indexOf(t)+2])?[r,e[e.indexOf(t)+2]].join(" "):r}var V=!1;function Z(e,t=()=>{}){return(...n)=>V?t(...n):e(...n)}function $4(e){return(...t)=>V&&e(...t)}var u2=[];function L3(e){u2.push(e)}function B4(e,t){u2.forEach(n=>n(e,t)),V=!0,f2(()=>{A(t,(n,r)=>{r(n,()=>{})})}),V=!1}var N3=!1;function T4(e,t){t._x_dataStack||(t._x_dataStack=e._x_dataStack),V=!0,N3=!0,f2(()=>{F4(t)}),V=!1,N3=!1}function F4(e){let t=!1;A(e,(r,i)=>{P(r,(o,s)=>{if(t&&m4(o))return s();t=!0,i(o,s)})})}function f2(e){let t=j;_1((n,r)=>{let i=t(n);return q(i),()=>{}}),e(),_1(t)}function C2(e,t,n,r=[]){switch(e._x_bindings||(e._x_bindings=z({})),e._x_bindings[t]=n,t=r.includes("camel")?z4(t):t,t){case"value":I4(e,n);break;case"style":j4(e,n);break;case"class":P4(e,n);break;case"selected":case"checked":R4(e,t,n);break;default:d2(e,t,n);break}}function I4(e,t){if(_2(e))e.attributes.value===void 0&&(e.value=t),window.fromModel&&(typeof t=="boolean"?e.checked=p3(e.value)===t:e.checked=v1(e.value,t));else if(a1(e))Number.isInteger(t)?e.value=t:!Array.isArray(t)&&typeof t!="boolean"&&![null,void 0].includes(t)?e.value=String(t):Array.isArray(t)?e.checked=t.some(n=>v1(n,e.value)):e.checked=!!t;else if(e.tagName==="SELECT")K4(e,t);else{if(e.value===t)return;e.value=t===void 0?"":t}}function P4(e,t){e._x_undoAddedClasses&&e._x_undoAddedClasses(),e._x_undoAddedClasses=s1(e,t)}function j4(e,t){e._x_undoAddedStyles&&e._x_undoAddedStyles(),e._x_undoAddedStyles=x3(e,t)}function R4(e,t,n){d2(e,t,n),N4(e,t,n)}function d2(e,t,n){[null,void 0,!1].includes(n)&&W4(t)?e.removeAttribute(t):(p2(t)&&(n=t),D4(e,t,n))}function D4(e,t,n){e.getAttribute(t)!=n&&e.setAttribute(t,n)}function N4(e,t,n){e[t]!==n&&(e[t]=n)}function K4(e,t){const n=[].concat(t).map(r=>r+"");Array.from(e.options).forEach(r=>{r.selected=n.includes(r.value)})}function z4(e){return e.toLowerCase().replace(/-(\w)/g,(t,n)=>n.toUpperCase())}function v1(e,t){return e==t}function p3(e){return[1,"1","true","on","yes",!0].includes(e)?!0:[0,"0","false","off","no",!1].includes(e)?!1:e?!!e:null}var q4=new Set(["allowfullscreen","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","inert","ismap","itemscope","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected","shadowrootclonable","shadowrootdelegatesfocus","shadowrootserializable"]);function p2(e){return q4.has(e)}function W4(e){return!["aria-pressed","aria-checked","aria-expanded","aria-selected"].includes(e)}function U4(e,t,n){return e._x_bindings&&e._x_bindings[t]!==void 0?e._x_bindings[t]:h2(e,t,n)}function J4(e,t,n,r=!0){if(e._x_bindings&&e._x_bindings[t]!==void 0)return e._x_bindings[t];if(e._x_inlineBindings&&e._x_inlineBindings[t]!==void 0){let i=e._x_inlineBindings[t];return i.extract=r,K1(()=>T(e,i.expression))}return h2(e,t,n)}function h2(e,t,n){let r=e.getAttribute(t);return r===null?typeof n=="function"?n():n:r===""?!0:p2(t)?!![t,"true"].includes(r):r}function a1(e){return e.type==="checkbox"||e.localName==="ui-checkbox"||e.localName==="ui-switch"}function _2(e){return e.type==="radio"||e.localName==="ui-radio"}function g2(e,t){var n;return function(){var r=this,i=arguments,o=function(){n=null,e.apply(r,i)};clearTimeout(n),n=setTimeout(o,t)}}function w2(e,t){let n;return function(){let r=this,i=arguments;n||(e.apply(r,i),n=!0,setTimeout(()=>n=!1,t))}}function v2({get:e,set:t},{get:n,set:r}){let i=!0,o,s=j(()=>{let a=e(),l=n();if(i)r(A3(a)),i=!1;else{let c=JSON.stringify(a),u=JSON.stringify(l);c!==o?r(A3(a)):c!==u&&t(A3(l))}o=JSON.stringify(e()),JSON.stringify(n())});return()=>{q(s)}}function A3(e){return typeof e=="object"?JSON.parse(JSON.stringify(e)):e}function Y4(e){(Array.isArray(e)?e:[e]).forEach(n=>n(s3))}var k={},x1=!1;function G4(e,t){if(x1||(k=z(k),x1=!0),t===void 0)return k[e];k[e]=t,R1(k[e]),typeof t=="object"&&t!==null&&t.hasOwnProperty("init")&&typeof t.init=="function"&&k[e].init()}function X4(){return k}var x2={};function Q4(e,t){let n=typeof t!="function"?()=>t:t;return e instanceof Element?L2(e,n()):(x2[e]=n,()=>{})}function e5(e){return Object.entries(x2).forEach(([t,n])=>{Object.defineProperty(e,t,{get(){return(...r)=>n(...r)}})}),e}function L2(e,t,n){let r=[];for(;r.length;)r.pop()();let i=Object.entries(t).map(([s,a])=>({name:s,value:a})),o=W1(i);return i=i.map(s=>o.find(a=>a.name===s.name)?{name:`x-bind:${s.name}`,value:`"${s.value}"`}:s),t1(e,i,n).map(s=>{r.push(s.runCleanups),s()}),()=>{for(;r.length;)r.pop()()}}var m2={};function t5(e,t){m2[e]=t}function n5(e,t){return Object.entries(m2).forEach(([n,r])=>{Object.defineProperty(e,n,{get(){return(...i)=>r.bind(t)(...i)},enumerable:!1})}),e}var r5={get reactive(){return z},get release(){return q},get effect(){return j},get raw(){return O1},version:"3.14.9",flushAndStopDeferringMutations:o4,dontAutoEvaluateFunctions:K1,disableEffectScheduling:X2,startObservingMutations:G3,stopObservingMutations:P1,setReactivityEngine:Q2,onAttributeRemoved:F1,onAttributesAdded:T1,closestDataStack:D,skipDuringClone:Z,onlyDuringClone:$4,addRootSelector:o2,addInitSelector:s2,interceptClone:L3,addScopeToNode:i3,deferMutations:i4,mapAttributes:n1,evaluateLater:L,interceptInit:y4,setEvaluator:f4,mergeProxies:o3,extractProp:J4,findClosest:U,onElRemoved:U3,closestRoot:v3,destroyTree:J,interceptor:D1,transition:D3,setStyles:x3,mutateDom:_,directive:w,entangle:v2,throttle:w2,debounce:g2,evaluate:T,initTree:A,nextTick:o1,prefixed:W,prefix:h4,plugin:Y4,magic:M,store:G4,start:L4,clone:T4,cloneNode:B4,bound:U4,$data:j1,watch:Z1,walk:P,data:t5,bind:Q4},s3=r5;function i5(e,t){const n=Object.create(null),r=e.split(",");for(let i=0;i<r.length;i++)n[r[i]]=!0;return i=>!!n[i]}var o5=Object.freeze({}),s5=Object.prototype.hasOwnProperty,m3=(e,t)=>s5.call(e,t),F=Array.isArray,n3=e=>y2(e)==="[object Map]",a5=e=>typeof e=="string",l1=e=>typeof e=="symbol",y3=e=>e!==null&&typeof e=="object",l5=Object.prototype.toString,y2=e=>l5.call(e),b2=e=>y2(e).slice(8,-1),c1=e=>a5(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,c5=e=>{const t=Object.create(null);return n=>t[n]||(t[n]=e(n))},u5=c5(e=>e.charAt(0).toUpperCase()+e.slice(1)),M2=(e,t)=>e!==t&&(e===e||t===t),K3=new WeakMap,Q=[],E,I=Symbol("iterate"),z3=Symbol("Map key iterate");function f5(e){return e&&e._isEffect===!0}function C5(e,t=o5){f5(e)&&(e=e.raw);const n=h5(e,t);return t.lazy||n(),n}function d5(e){e.active&&(E2(e),e.options.onStop&&e.options.onStop(),e.active=!1)}var p5=0;function h5(e,t){const n=function(){if(!n.active)return e();if(!Q.includes(n)){E2(n);try{return g5(),Q.push(n),E=n,e()}finally{Q.pop(),A2(),E=Q[Q.length-1]}}};return n.id=p5++,n.allowRecurse=!!t.allowRecurse,n._isEffect=!0,n.active=!0,n.raw=e,n.deps=[],n.options=t,n}function E2(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}var N=!0,u1=[];function _5(){u1.push(N),N=!1}function g5(){u1.push(N),N=!0}function A2(){const e=u1.pop();N=e===void 0?!0:e}function b(e,t,n){if(!N||E===void 0)return;let r=K3.get(e);r||K3.set(e,r=new Map);let i=r.get(n);i||r.set(n,i=new Set),i.has(E)||(i.add(E),E.deps.push(i),E.options.onTrack&&E.options.onTrack({effect:E,target:e,type:t,key:n}))}function O(e,t,n,r,i,o){const s=K3.get(e);if(!s)return;const a=new Set,l=u=>{u&&u.forEach(C=>{(C!==E||C.allowRecurse)&&a.add(C)})};if(t==="clear")s.forEach(l);else if(n==="length"&&F(e))s.forEach((u,C)=>{(C==="length"||C>=r)&&l(u)});else switch(n!==void 0&&l(s.get(n)),t){case"add":F(e)?c1(n)&&l(s.get("length")):(l(s.get(I)),n3(e)&&l(s.get(z3)));break;case"delete":F(e)||(l(s.get(I)),n3(e)&&l(s.get(z3)));break;case"set":n3(e)&&l(s.get(I));break}const c=u=>{u.options.onTrigger&&u.options.onTrigger({effect:u,target:e,key:n,type:t,newValue:r,oldValue:i,oldTarget:o}),u.options.scheduler?u.options.scheduler(u):u()};a.forEach(c)}var w5=i5("__proto__,__v_isRef,__isVue"),S2=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(l1)),v5=H2(),x5=H2(!0),L1=L5();function L5(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...n){const r=p(this);for(let o=0,s=this.length;o<s;o++)b(r,"get",o+"");const i=r[t](...n);return i===-1||i===!1?r[t](...n.map(p)):i}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...n){_5();const r=p(this)[t].apply(this,n);return A2(),r}}),e}function H2(e=!1,t=!1){return function(r,i,o){if(i==="__v_isReactive")return!e;if(i==="__v_isReadonly")return e;if(i==="__v_raw"&&o===(e?t?B5:k2:t?$5:Z2).get(r))return r;const s=F(r);if(!e&&s&&m3(L1,i))return Reflect.get(L1,i,o);const a=Reflect.get(r,i,o);return(l1(i)?S2.has(i):w5(i))||(e||b(r,"get",i),t)?a:q3(a)?!s||!c1(i)?a.value:a:y3(a)?e?$2(a):p1(a):a}}var m5=y5();function y5(e=!1){return function(n,r,i,o){let s=n[r];if(!e&&(i=p(i),s=p(s),!F(n)&&q3(s)&&!q3(i)))return s.value=i,!0;const a=F(n)&&c1(r)?Number(r)<n.length:m3(n,r),l=Reflect.set(n,r,i,o);return n===p(o)&&(a?M2(i,s)&&O(n,"set",r,i,s):O(n,"add",r,i)),l}}function b5(e,t){const n=m3(e,t),r=e[t],i=Reflect.deleteProperty(e,t);return i&&n&&O(e,"delete",t,void 0,r),i}function M5(e,t){const n=Reflect.has(e,t);return(!l1(t)||!S2.has(t))&&b(e,"has",t),n}function E5(e){return b(e,"iterate",F(e)?"length":I),Reflect.ownKeys(e)}var A5={get:v5,set:m5,deleteProperty:b5,has:M5,ownKeys:E5},S5={get:x5,set(e,t){return console.warn(`Set operation on key "${String(t)}" failed: target is readonly.`,e),!0},deleteProperty(e,t){return console.warn(`Delete operation on key "${String(t)}" failed: target is readonly.`,e),!0}},f1=e=>y3(e)?p1(e):e,C1=e=>y3(e)?$2(e):e,d1=e=>e,b3=e=>Reflect.getPrototypeOf(e);function l3(e,t,n=!1,r=!1){e=e.__v_raw;const i=p(e),o=p(t);t!==o&&!n&&b(i,"get",t),!n&&b(i,"get",o);const{has:s}=b3(i),a=r?d1:n?C1:f1;if(s.call(i,t))return a(e.get(t));if(s.call(i,o))return a(e.get(o));e!==i&&e.get(t)}function c3(e,t=!1){const n=this.__v_raw,r=p(n),i=p(e);return e!==i&&!t&&b(r,"has",e),!t&&b(r,"has",i),e===i?n.has(e):n.has(e)||n.has(i)}function u3(e,t=!1){return e=e.__v_raw,!t&&b(p(e),"iterate",I),Reflect.get(e,"size",e)}function m1(e){e=p(e);const t=p(this);return b3(t).has.call(t,e)||(t.add(e),O(t,"add",e,e)),this}function y1(e,t){t=p(t);const n=p(this),{has:r,get:i}=b3(n);let o=r.call(n,e);o?O2(n,r,e):(e=p(e),o=r.call(n,e));const s=i.call(n,e);return n.set(e,t),o?M2(t,s)&&O(n,"set",e,t,s):O(n,"add",e,t),this}function b1(e){const t=p(this),{has:n,get:r}=b3(t);let i=n.call(t,e);i?O2(t,n,e):(e=p(e),i=n.call(t,e));const o=r?r.call(t,e):void 0,s=t.delete(e);return i&&O(t,"delete",e,void 0,o),s}function M1(){const e=p(this),t=e.size!==0,n=n3(e)?new Map(e):new Set(e),r=e.clear();return t&&O(e,"clear",void 0,void 0,n),r}function f3(e,t){return function(r,i){const o=this,s=o.__v_raw,a=p(s),l=t?d1:e?C1:f1;return!e&&b(a,"iterate",I),s.forEach((c,u)=>r.call(i,l(c),l(u),o))}}function C3(e,t,n){return function(...r){const i=this.__v_raw,o=p(i),s=n3(o),a=e==="entries"||e===Symbol.iterator&&s,l=e==="keys"&&s,c=i[e](...r),u=n?d1:t?C1:f1;return!t&&b(o,"iterate",l?z3:I),{next(){const{value:C,done:d}=c.next();return d?{value:C,done:d}:{value:a?[u(C[0]),u(C[1])]:u(C),done:d}},[Symbol.iterator](){return this}}}}function H(e){return function(...t){{const n=t[0]?`on key "${t[0]}" `:"";console.warn(`${u5(e)} operation ${n}failed: target is readonly.`,p(this))}return e==="delete"?!1:this}}function H5(){const e={get(o){return l3(this,o)},get size(){return u3(this)},has:c3,add:m1,set:y1,delete:b1,clear:M1,forEach:f3(!1,!1)},t={get(o){return l3(this,o,!1,!0)},get size(){return u3(this)},has:c3,add:m1,set:y1,delete:b1,clear:M1,forEach:f3(!1,!0)},n={get(o){return l3(this,o,!0)},get size(){return u3(this,!0)},has(o){return c3.call(this,o,!0)},add:H("add"),set:H("set"),delete:H("delete"),clear:H("clear"),forEach:f3(!0,!1)},r={get(o){return l3(this,o,!0,!0)},get size(){return u3(this,!0)},has(o){return c3.call(this,o,!0)},add:H("add"),set:H("set"),delete:H("delete"),clear:H("clear"),forEach:f3(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{e[o]=C3(o,!1,!1),n[o]=C3(o,!0,!1),t[o]=C3(o,!1,!0),r[o]=C3(o,!0,!0)}),[e,n,t,r]}var[V5,O5,r6,i6]=H5();function V2(e,t){const n=e?O5:V5;return(r,i,o)=>i==="__v_isReactive"?!e:i==="__v_isReadonly"?e:i==="__v_raw"?r:Reflect.get(m3(n,i)&&i in r?n:r,i,o)}var Z5={get:V2(!1)},k5={get:V2(!0)};function O2(e,t,n){const r=p(n);if(r!==n&&t.call(e,r)){const i=b2(e);console.warn(`Reactive ${i} contains both the raw and reactive versions of the same object${i==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}var Z2=new WeakMap,$5=new WeakMap,k2=new WeakMap,B5=new WeakMap;function T5(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function F5(e){return e.__v_skip||!Object.isExtensible(e)?0:T5(b2(e))}function p1(e){return e&&e.__v_isReadonly?e:B2(e,!1,A5,Z5,Z2)}function $2(e){return B2(e,!0,S5,k5,k2)}function B2(e,t,n,r,i){if(!y3(e))return console.warn(`value cannot be made reactive: ${String(e)}`),e;if(e.__v_raw&&!(t&&e.__v_isReactive))return e;const o=i.get(e);if(o)return o;const s=F5(e);if(s===0)return e;const a=new Proxy(e,s===2?r:n);return i.set(e,a),a}function p(e){return e&&p(e.__v_raw)||e}function q3(e){return!!(e&&e.__v_isRef===!0)}M("nextTick",()=>o1);M("dispatch",e=>t3.bind(t3,e));M("watch",(e,{evaluateLater:t,cleanup:n})=>(r,i)=>{let o=t(r),a=Z1(()=>{let l;return o(c=>l=c),l},i);n(a)});M("store",X4);M("data",e=>j1(e));M("root",e=>v3(e));M("refs",e=>(e._x_refs_proxy||(e._x_refs_proxy=o3(I5(e))),e._x_refs_proxy));function I5(e){let t=[];return U(e,n=>{n._x_refs&&t.push(n._x_refs)}),t}var S3={};function T2(e){return S3[e]||(S3[e]=0),++S3[e]}function P5(e,t){return U(e,n=>{if(n._x_ids&&n._x_ids[t])return!0})}function j5(e,t){e._x_ids||(e._x_ids={}),e._x_ids[t]||(e._x_ids[t]=T2(t))}M("id",(e,{cleanup:t})=>(n,r=null)=>{let i=`${n}${r?`-${r}`:""}`;return R5(e,i,t,()=>{let o=P5(e,n),s=o?o._x_ids[n]:T2(n);return r?`${n}-${s}-${r}`:`${n}-${s}`})});L3((e,t)=>{e._x_id&&(t._x_id=e._x_id)});function R5(e,t,n,r){if(e._x_id||(e._x_id={}),e._x_id[t])return e._x_id[t];let i=r();return e._x_id[t]=i,n(()=>{delete e._x_id[t]}),i}M("el",e=>e);F2("Focus","focus","focus");F2("Persist","persist","persist");function F2(e,t,n){M(t,r=>y(`You can't use [$${t}] without first installing the "${e}" plugin here: https://alpinejs.dev/plugins/${n}`,r))}w("modelable",(e,{expression:t},{effect:n,evaluateLater:r,cleanup:i})=>{let o=r(t),s=()=>{let u;return o(C=>u=C),u},a=r(`${t} = __placeholder`),l=u=>a(()=>{},{scope:{__placeholder:u}}),c=s();l(c),queueMicrotask(()=>{if(!e._x_model)return;e._x_removeModelListeners.default();let u=e._x_model.get,C=e._x_model.set,d=v2({get(){return u()},set(v){C(v)}},{get(){return s()},set(v){l(v)}});i(d)})});w("teleport",(e,{modifiers:t,expression:n},{cleanup:r})=>{e.tagName.toLowerCase()!=="template"&&y("x-teleport can only be used on a <template> tag",e);let i=E1(n),o=e.content.cloneNode(!0).firstElementChild;e._x_teleport=o,o._x_teleportBack=e,e.setAttribute("data-teleport-template",!0),o.setAttribute("data-teleport-target",!0),e._x_forwardEvents&&e._x_forwardEvents.forEach(a=>{o.addEventListener(a,l=>{l.stopPropagation(),e.dispatchEvent(new l.constructor(l.type,l))})}),i3(o,{},e);let s=(a,l,c)=>{c.includes("prepend")?l.parentNode.insertBefore(a,l):c.includes("append")?l.parentNode.insertBefore(a,l.nextSibling):l.appendChild(a)};_(()=>{s(o,i,t),Z(()=>{A(o)})()}),e._x_teleportPutBack=()=>{let a=E1(n);_(()=>{s(e._x_teleport,a,t)})},r(()=>_(()=>{o.remove(),J(o)}))});var D5=document.createElement("div");function E1(e){let t=Z(()=>document.querySelector(e),()=>D5)();return t||y(`Cannot find x-teleport element for selector: "${e}"`),t}var I2=()=>{};I2.inline=(e,{modifiers:t},{cleanup:n})=>{t.includes("self")?e._x_ignoreSelf=!0:e._x_ignore=!0,n(()=>{t.includes("self")?delete e._x_ignoreSelf:delete e._x_ignore})};w("ignore",I2);w("effect",Z((e,{expression:t},{effect:n})=>{n(L(e,t))}));function W3(e,t,n,r){let i=e,o=l=>r(l),s={},a=(l,c)=>u=>c(l,u);if(n.includes("dot")&&(t=N5(t)),n.includes("camel")&&(t=K5(t)),n.includes("passive")&&(s.passive=!0),n.includes("capture")&&(s.capture=!0),n.includes("window")&&(i=window),n.includes("document")&&(i=document),n.includes("debounce")){let l=n[n.indexOf("debounce")+1]||"invalid-wait",c=w3(l.split("ms")[0])?Number(l.split("ms")[0]):250;o=g2(o,c)}if(n.includes("throttle")){let l=n[n.indexOf("throttle")+1]||"invalid-wait",c=w3(l.split("ms")[0])?Number(l.split("ms")[0]):250;o=w2(o,c)}return n.includes("prevent")&&(o=a(o,(l,c)=>{c.preventDefault(),l(c)})),n.includes("stop")&&(o=a(o,(l,c)=>{c.stopPropagation(),l(c)})),n.includes("once")&&(o=a(o,(l,c)=>{l(c),i.removeEventListener(t,o,s)})),(n.includes("away")||n.includes("outside"))&&(i=document,o=a(o,(l,c)=>{e.contains(c.target)||c.target.isConnected!==!1&&(e.offsetWidth<1&&e.offsetHeight<1||e._x_isShown!==!1&&l(c))})),n.includes("self")&&(o=a(o,(l,c)=>{c.target===e&&l(c)})),(q5(t)||P2(t))&&(o=a(o,(l,c)=>{W5(c,n)||l(c)})),i.addEventListener(t,o,s),()=>{i.removeEventListener(t,o,s)}}function N5(e){return e.replace(/-/g,".")}function K5(e){return e.toLowerCase().replace(/-(\w)/g,(t,n)=>n.toUpperCase())}function w3(e){return!Array.isArray(e)&&!isNaN(e)}function z5(e){return[" ","_"].includes(e)?e:e.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[_\s]/,"-").toLowerCase()}function q5(e){return["keydown","keyup"].includes(e)}function P2(e){return["contextmenu","click","mouse"].some(t=>e.includes(t))}function W5(e,t){let n=t.filter(o=>!["window","document","prevent","stop","once","capture","self","away","outside","passive"].includes(o));if(n.includes("debounce")){let o=n.indexOf("debounce");n.splice(o,w3((n[o+1]||"invalid-wait").split("ms")[0])?2:1)}if(n.includes("throttle")){let o=n.indexOf("throttle");n.splice(o,w3((n[o+1]||"invalid-wait").split("ms")[0])?2:1)}if(n.length===0||n.length===1&&A1(e.key).includes(n[0]))return!1;const i=["ctrl","shift","alt","meta","cmd","super"].filter(o=>n.includes(o));return n=n.filter(o=>!i.includes(o)),!(i.length>0&&i.filter(s=>((s==="cmd"||s==="super")&&(s="meta"),e[`${s}Key`])).length===i.length&&(P2(e.type)||A1(e.key).includes(n[0])))}function A1(e){if(!e)return[];e=z5(e);let t={ctrl:"control",slash:"/",space:" ",spacebar:" ",cmd:"meta",esc:"escape",up:"arrow-up",down:"arrow-down",left:"arrow-left",right:"arrow-right",period:".",comma:",",equal:"=",minus:"-",underscore:"_"};return t[e]=e,Object.keys(t).map(n=>{if(t[n]===e)return n}).filter(n=>n)}w("model",(e,{modifiers:t,expression:n},{effect:r,cleanup:i})=>{let o=e;t.includes("parent")&&(o=e.parentNode);let s=L(o,n),a;typeof n=="string"?a=L(o,`${n} = __placeholder`):typeof n=="function"&&typeof n()=="string"?a=L(o,`${n()} = __placeholder`):a=()=>{};let l=()=>{let d;return s(v=>d=v),S1(d)?d.get():d},c=d=>{let v;s(S=>v=S),S1(v)?v.set(d):a(()=>{},{scope:{__placeholder:d}})};typeof n=="string"&&e.type==="radio"&&_(()=>{e.hasAttribute("name")||e.setAttribute("name",n)});var u=e.tagName.toLowerCase()==="select"||["checkbox","radio"].includes(e.type)||t.includes("lazy")?"change":"input";let C=V?()=>{}:W3(e,u,t,d=>{c(H3(e,t,d,l()))});if(t.includes("fill")&&([void 0,null,""].includes(l())||a1(e)&&Array.isArray(l())||e.tagName.toLowerCase()==="select"&&e.multiple)&&c(H3(e,t,{target:e},l())),e._x_removeModelListeners||(e._x_removeModelListeners={}),e._x_removeModelListeners.default=C,i(()=>e._x_removeModelListeners.default()),e.form){let d=W3(e.form,"reset",[],v=>{o1(()=>e._x_model&&e._x_model.set(H3(e,t,{target:e},l())))});i(()=>d())}e._x_model={get(){return l()},set(d){c(d)}},e._x_forceModelUpdate=d=>{d===void 0&&typeof n=="string"&&n.match(/\./)&&(d=""),window.fromModel=!0,_(()=>C2(e,"value",d)),delete window.fromModel},r(()=>{let d=l();t.includes("unintrusive")&&document.activeElement.isSameNode(e)||e._x_forceModelUpdate(d)})});function H3(e,t,n,r){return _(()=>{if(n instanceof CustomEvent&&n.detail!==void 0)return n.detail!==null&&n.detail!==void 0?n.detail:n.target.value;if(a1(e))if(Array.isArray(r)){let i=null;return t.includes("number")?i=V3(n.target.value):t.includes("boolean")?i=p3(n.target.value):i=n.target.value,n.target.checked?r.includes(i)?r:r.concat([i]):r.filter(o=>!U5(o,i))}else return n.target.checked;else{if(e.tagName.toLowerCase()==="select"&&e.multiple)return t.includes("number")?Array.from(n.target.selectedOptions).map(i=>{let o=i.value||i.text;return V3(o)}):t.includes("boolean")?Array.from(n.target.selectedOptions).map(i=>{let o=i.value||i.text;return p3(o)}):Array.from(n.target.selectedOptions).map(i=>i.value||i.text);{let i;return _2(e)?n.target.checked?i=n.target.value:i=r:i=n.target.value,t.includes("number")?V3(i):t.includes("boolean")?p3(i):t.includes("trim")?i.trim():i}}})}function V3(e){let t=e?parseFloat(e):null;return J5(t)?t:e}function U5(e,t){return e==t}function J5(e){return!Array.isArray(e)&&!isNaN(e)}function S1(e){return e!==null&&typeof e=="object"&&typeof e.get=="function"&&typeof e.set=="function"}w("cloak",e=>queueMicrotask(()=>_(()=>e.removeAttribute(W("cloak")))));s2(()=>`[${W("init")}]`);w("init",Z((e,{expression:t},{evaluate:n})=>typeof t=="string"?!!t.trim()&&n(t,{},!1):n(t,{},!1)));w("text",(e,{expression:t},{effect:n,evaluateLater:r})=>{let i=r(t);n(()=>{i(o=>{_(()=>{e.textContent=o})})})});w("html",(e,{expression:t},{effect:n,evaluateLater:r})=>{let i=r(t);n(()=>{i(o=>{_(()=>{e.innerHTML=o,e._x_ignoreSelf=!0,A(e),delete e._x_ignoreSelf})})})});n1(Y1(":",G1(W("bind:"))));var j2=(e,{value:t,modifiers:n,expression:r,original:i},{effect:o,cleanup:s})=>{if(!t){let l={};e5(l),L(e,r)(u=>{L2(e,u,i)},{scope:l});return}if(t==="key")return Y5(e,r);if(e._x_inlineBindings&&e._x_inlineBindings[t]&&e._x_inlineBindings[t].extract)return;let a=L(e,r);o(()=>a(l=>{l===void 0&&typeof r=="string"&&r.match(/\./)&&(l=""),_(()=>C2(e,t,l,n))})),s(()=>{e._x_undoAddedClasses&&e._x_undoAddedClasses(),e._x_undoAddedStyles&&e._x_undoAddedStyles()})};j2.inline=(e,{value:t,modifiers:n,expression:r})=>{t&&(e._x_inlineBindings||(e._x_inlineBindings={}),e._x_inlineBindings[t]={expression:r,extract:!1})};w("bind",j2);function Y5(e,t){e._x_keyExpression=t}o2(()=>`[${W("data")}]`);w("data",(e,{expression:t},{cleanup:n})=>{if(G5(e))return;t=t===""?"{}":t;let r={};T3(r,e);let i={};n5(i,r);let o=T(e,t,{scope:i});(o===void 0||o===!0)&&(o={}),T3(o,e);let s=z(o);R1(s);let a=i3(e,s);s.init&&T(e,s.init),n(()=>{s.destroy&&T(e,s.destroy),a()})});L3((e,t)=>{e._x_dataStack&&(t._x_dataStack=e._x_dataStack,t.setAttribute("data-has-alpine-state",!0))});function G5(e){return V?N3?!0:e.hasAttribute("data-has-alpine-state"):!1}w("show",(e,{modifiers:t,expression:n},{effect:r})=>{let i=L(e,n);e._x_doHide||(e._x_doHide=()=>{_(()=>{e.style.setProperty("display","none",t.includes("important")?"important":void 0)})}),e._x_doShow||(e._x_doShow=()=>{_(()=>{e.style.length===1&&e.style.display==="none"?e.removeAttribute("style"):e.style.removeProperty("display")})});let o=()=>{e._x_doHide(),e._x_isShown=!1},s=()=>{e._x_doShow(),e._x_isShown=!0},a=()=>setTimeout(s),l=R3(C=>C?s():o(),C=>{typeof e._x_toggleAndCascadeWithTransitions=="function"?e._x_toggleAndCascadeWithTransitions(e,C,s,o):C?a():o()}),c,u=!0;r(()=>i(C=>{!u&&C===c||(t.includes("immediate")&&(C?a():o()),l(C),c=C,u=!1)}))});w("for",(e,{expression:t},{effect:n,cleanup:r})=>{let i=Q5(t),o=L(e,i.items),s=L(e,e._x_keyExpression||"index");e._x_prevKeys=[],e._x_lookup={},n(()=>X5(e,i,o,s)),r(()=>{Object.values(e._x_lookup).forEach(a=>_(()=>{J(a),a.remove()})),delete e._x_prevKeys,delete e._x_lookup})});function X5(e,t,n,r){let i=s=>typeof s=="object"&&!Array.isArray(s),o=e;n(s=>{e6(s)&&s>=0&&(s=Array.from(Array(s).keys(),f=>f+1)),s===void 0&&(s=[]);let a=e._x_lookup,l=e._x_prevKeys,c=[],u=[];if(i(s))s=Object.entries(s).map(([f,h])=>{let g=H1(t,h,f,s);r(x=>{u.includes(x)&&y("Duplicate key on x-for",e),u.push(x)},{scope:{index:f,...g}}),c.push(g)});else for(let f=0;f<s.length;f++){let h=H1(t,s[f],f,s);r(g=>{u.includes(g)&&y("Duplicate key on x-for",e),u.push(g)},{scope:{index:f,...h}}),c.push(h)}let C=[],d=[],v=[],S=[];for(let f=0;f<l.length;f++){let h=l[f];u.indexOf(h)===-1&&v.push(h)}l=l.filter(f=>!v.includes(f));let a3="template";for(let f=0;f<u.length;f++){let h=u[f],g=l.indexOf(h);if(g===-1)l.splice(f,0,h),C.push([a3,f]);else if(g!==f){let x=l.splice(f,1)[0],m=l.splice(g-1,1)[0];l.splice(f,0,m),l.splice(g,0,x),d.push([x,m])}else S.push(h);a3=h}for(let f=0;f<v.length;f++){let h=v[f];h in a&&(_(()=>{J(a[h]),a[h].remove()}),delete a[h])}for(let f=0;f<d.length;f++){let[h,g]=d[f],x=a[h],m=a[g],R=document.createElement("div");_(()=>{m||y('x-for ":key" is undefined or invalid',o,g,a),m.after(R),x.after(m),m._x_currentIfEl&&m.after(m._x_currentIfEl),R.before(x),x._x_currentIfEl&&x.after(x._x_currentIfEl),R.remove()}),m._x_refreshXForScope(c[u.indexOf(g)])}for(let f=0;f<C.length;f++){let[h,g]=C[f],x=h==="template"?o:a[h];x._x_currentIfEl&&(x=x._x_currentIfEl);let m=c[g],R=u[g],Y=document.importNode(o.content,!0).firstElementChild,h1=z(m);i3(Y,h1,o),Y._x_refreshXForScope=K2=>{Object.entries(K2).forEach(([z2,q2])=>{h1[z2]=q2})},_(()=>{x.after(Y),Z(()=>A(Y))()}),typeof R=="object"&&y("x-for key cannot be an object, it must be a string or an integer",o),a[R]=Y}for(let f=0;f<S.length;f++)a[S[f]]._x_refreshXForScope(c[u.indexOf(S[f])]);o._x_prevKeys=u})}function Q5(e){let t=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,n=/^\s*\(|\)\s*$/g,r=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,i=e.match(r);if(!i)return;let o={};o.items=i[2].trim();let s=i[1].replace(n,"").trim(),a=s.match(t);return a?(o.item=s.replace(t,"").trim(),o.index=a[1].trim(),a[2]&&(o.collection=a[2].trim())):o.item=s,o}function H1(e,t,n,r){let i={};return/^\[.*\]$/.test(e.item)&&Array.isArray(t)?e.item.replace("[","").replace("]","").split(",").map(s=>s.trim()).forEach((s,a)=>{i[s]=t[a]}):/^\{.*\}$/.test(e.item)&&!Array.isArray(t)&&typeof t=="object"?e.item.replace("{","").replace("}","").split(",").map(s=>s.trim()).forEach(s=>{i[s]=t[s]}):i[e.item]=t,e.index&&(i[e.index]=n),e.collection&&(i[e.collection]=r),i}function e6(e){return!Array.isArray(e)&&!isNaN(e)}function R2(){}R2.inline=(e,{expression:t},{cleanup:n})=>{let r=v3(e);r._x_refs||(r._x_refs={}),r._x_refs[t]=e,n(()=>delete r._x_refs[t])};w("ref",R2);w("if",(e,{expression:t},{effect:n,cleanup:r})=>{e.tagName.toLowerCase()!=="template"&&y("x-if can only be used on a <template> tag",e);let i=L(e,t),o=()=>{if(e._x_currentIfEl)return e._x_currentIfEl;let a=e.content.cloneNode(!0).firstElementChild;return i3(a,{},e),_(()=>{e.after(a),Z(()=>A(a))()}),e._x_currentIfEl=a,e._x_undoIf=()=>{_(()=>{J(a),a.remove()}),delete e._x_currentIfEl},a},s=()=>{e._x_undoIf&&(e._x_undoIf(),delete e._x_undoIf)};n(()=>i(a=>{a?o():s()})),r(()=>e._x_undoIf&&e._x_undoIf())});w("id",(e,{expression:t},{evaluate:n})=>{n(t).forEach(i=>j5(e,i))});L3((e,t)=>{e._x_ids&&(t._x_ids=e._x_ids)});n1(Y1("@",G1(W("on:"))));w("on",Z((e,{value:t,modifiers:n,expression:r},{cleanup:i})=>{let o=r?L(e,r):()=>{};e.tagName.toLowerCase()==="template"&&(e._x_forwardEvents||(e._x_forwardEvents=[]),e._x_forwardEvents.includes(t)||e._x_forwardEvents.push(t));let s=W3(e,t,n,a=>{o(()=>{},{scope:{$event:a},params:[a]})});i(()=>s())}));M3("Collapse","collapse","collapse");M3("Intersect","intersect","intersect");M3("Focus","trap","focus");M3("Mask","mask","mask");function M3(e,t,n){w(t,r=>y(`You can't use [x-${t}] without first installing the "${e}" plugin here: https://alpinejs.dev/plugins/${n}`,r))}s3.setEvaluator(q1);s3.setReactivityEngine({reactive:p1,effect:C5,release:d5,raw:p});var t6=s3,V1=t6;const n6={logo:(e="")=>`<svg class="${e}" width="279" height="58" viewBox="0 0 279 58" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M39.2057 44.2639C40.1315 44.2639 40.882 43.5133 40.882 42.5875C40.882 41.6617 40.1315 40.9111 39.2057 40.9111C38.2798 40.9111 37.5293 41.6617 37.5293 42.5875C37.5293 43.5133 38.2798 44.2639 39.2057 44.2639Z" fill="#20505B"/>
<path d="M12.9829 26.0557L32.6306 32.6446C30.8113 38.0701 24.9385 40.9929 19.5119 39.1733C14.0864 37.354 11.1635 31.4811 12.9829 26.0557Z" fill="#20505B"/>
<path d="M22.9072 36.7773C26.9614 36.7773 30.248 33.4907 30.248 29.4365C30.248 25.3823 26.9614 22.0957 22.9072 22.0957C18.853 22.0957 15.5664 25.3823 15.5664 29.4365C15.5664 33.4907 18.853 36.7773 22.9072 36.7773Z" fill="#154047"/>
<path d="M22.9071 33.4558C25.127 33.4558 26.9265 31.6563 26.9265 29.4364C26.9265 27.2166 25.127 25.417 22.9071 25.417C20.6873 25.417 18.8877 27.2166 18.8877 29.4364C18.8877 31.6563 20.6873 33.4558 22.9071 33.4558Z" fill="#092A2D"/>
<path d="M33.1428 28.6521L14.981 22.5608C17.65 19.4867 22.0019 18.1504 26.1008 19.5254C30.2008 20.9008 32.868 24.5901 33.1428 28.6521Z" fill="#20505B"/>
<path d="M32.6302 32.6448L36.5228 33.9497C33.982 41.5245 25.7817 45.6057 18.2066 43.066C10.6315 40.5263 6.55125 32.3265 9.08986 24.751L12.9824 26.0559C11.163 31.4814 14.086 37.3542 19.5115 39.1735C24.938 40.9932 30.8109 38.0702 32.6302 32.6448Z" fill="#3A50E0"/>
<path d="M44.16 35.239C44.4839 35.396 44.5596 35.7109 44.4722 35.9726C44.376 36.2606 44.0812 36.4848 43.7044 36.3578L36.5229 33.9495L32.6304 32.6446L12.9826 26.0557L9.09009 24.7508L9.09049 24.7497L1.90885 22.3413C1.19097 22.1016 1.47674 21.0263 2.21927 21.1741C3.95904 21.5193 5.72356 21.4169 7.36778 20.9139C9.01377 20.4127 10.5391 19.512 11.7981 18.2632C15.8576 14.2385 21.9841 12.5978 27.7731 14.5397C33.5624 16.4805 37.4617 21.4831 38.2735 27.1421C38.7764 30.6523 40.9673 33.6936 44.16 35.239ZM14.9807 22.5608L33.1426 28.6521C32.8678 24.5901 30.2005 20.9008 26.1005 19.5254C22.0016 18.1504 17.6497 19.4868 14.9807 22.5608Z" fill="#00FFBB"/>
<path d="M22.8058 45.8735C21.0568 45.8735 19.291 45.595 17.5718 45.0209L17.5519 45.0142C15.6167 44.3654 13.8427 43.3801 12.2807 42.0863C12.071 41.9125 12.0418 41.6017 12.2155 41.3921C12.3892 41.1824 12.7 41.1531 12.9097 41.3269C14.3779 42.543 16.0457 43.4693 17.8667 44.0798L17.8828 44.0852C23.7911 46.0583 30.2873 44.3187 34.4339 39.6538C34.6149 39.4503 34.9264 39.4319 35.1301 39.6127C35.3335 39.7937 35.3519 40.1053 35.171 40.3088C31.9686 43.9116 27.4474 45.8735 22.8058 45.8735ZM10.7975 40.4548C10.6607 40.4548 10.5247 40.3983 10.4273 40.2875C7.26816 36.7001 5.80736 31.9391 6.41953 27.2256C6.45454 26.9556 6.70234 26.7654 6.97204 26.8002C7.24203 26.8353 7.43255 27.0826 7.39744 27.3527C6.82186 31.7846 8.19588 36.2617 11.1673 39.636C11.3472 39.8403 11.3275 40.1518 11.1231 40.3319C11.0295 40.4142 10.9133 40.4548 10.7975 40.4548ZM36.1821 38.6791C36.0888 38.6791 35.9944 38.6526 35.9107 38.5973C35.6835 38.4472 35.6211 38.1412 35.7713 37.9141C36.106 37.4077 36.414 36.8757 36.6867 36.3329C36.8089 36.0896 37.1054 35.9914 37.3485 36.1137C37.5919 36.2359 37.69 36.5323 37.5678 36.7756C37.2777 37.3531 36.95 37.9191 36.5939 38.4579C36.499 38.6013 36.3421 38.6791 36.1821 38.6791ZM42.9729 33.1157C42.861 33.1157 42.7485 33.0778 42.656 33.0001C40.8506 31.483 39.6702 29.3486 39.3322 26.9899C39.2935 26.7203 39.4808 26.4706 39.7503 26.4319C40.0204 26.3931 40.2696 26.5806 40.3082 26.85C40.6117 28.9682 41.6708 30.8842 43.2904 32.245C43.4988 32.4202 43.5258 32.7313 43.3506 32.9397C43.2532 33.0559 43.1135 33.1157 42.9729 33.1157ZM39.2707 24.9192C39.0586 24.9192 38.8626 24.7812 38.7986 24.5675C38.1615 22.4404 37.1249 20.4896 35.7177 18.7692C34.6705 17.4889 33.4414 16.375 32.0645 15.4587C31.8378 15.3079 31.7764 15.0018 31.9273 14.7751C32.078 14.5485 32.3838 14.4868 32.6109 14.6377C34.0695 15.6084 35.3716 16.7885 36.481 18.1449C37.971 19.9664 39.0685 22.032 39.7433 24.2845C39.8214 24.5453 39.6732 24.8201 39.4124 24.8982C39.3652 24.9125 39.3176 24.9192 39.2707 24.9192ZM6.91041 19.9127C6.69909 19.9127 6.50364 19.7758 6.43896 19.5632C6.35967 19.3026 6.5065 19.0271 6.76703 18.9478C7.43481 18.7445 8.08051 18.4576 8.68597 18.0953C8.91978 17.9555 9.22241 18.0316 9.36224 18.2653C9.50207 18.4989 9.42594 18.8017 9.19233 18.9415C8.51804 19.345 7.79868 19.6645 7.05428 19.8911C7.00636 19.9057 6.95794 19.9127 6.91041 19.9127ZM10.6977 17.6467C10.5708 17.6467 10.444 17.598 10.3475 17.5008C10.1558 17.3075 10.1571 16.9953 10.3505 16.8036C12.6419 14.5318 15.5126 12.9282 18.6522 12.1662C21.8739 11.3843 25.2462 11.5285 28.4043 12.5833L28.4269 12.5909C28.9944 12.7811 29.5581 13.0024 30.1022 13.2484C30.3503 13.3606 30.4605 13.6527 30.3482 13.9008C30.2361 14.1489 29.9442 14.2593 29.6958 14.1469C29.1819 13.9146 28.6495 13.7055 28.1132 13.5258L28.093 13.5191C25.1099 12.5227 21.9261 12.3864 18.8848 13.1246C15.9197 13.8443 13.2086 15.3586 11.0448 17.504C10.9487 17.599 10.8231 17.6467 10.6977 17.6467Z" fill="#383839"/>
<path d="M22.7939 44.3103C21.2205 44.3103 19.6219 44.0602 18.05 43.5332C10.3868 40.9638 6.17193 32.752 8.47387 25.0627L1.75215 22.8087C1.18642 22.6197 0.886649 22.0634 1.03979 21.4861C1.19313 20.9084 1.72976 20.5738 2.3155 20.6904C3.94108 21.0129 5.63845 20.927 7.2235 20.4423C8.80707 19.9601 10.2687 19.0855 11.4509 17.9129C13.5401 15.8416 16.1576 14.3795 19.0207 13.6847C21.964 12.9703 25.0447 13.1042 27.9298 14.0722C30.8152 15.0395 33.3539 16.79 35.2714 19.1343C37.1368 21.415 38.3436 24.1598 38.7615 27.072C39.2443 30.4403 41.3427 33.3275 44.3749 34.7951C44.8869 35.0434 45.1193 35.5917 44.94 36.1286C44.8451 36.4125 44.6425 36.6491 44.384 36.7776C44.1296 36.9043 43.8324 36.921 43.5469 36.8248L40.4225 35.7771C40.1643 35.6905 40.0253 35.411 40.1119 35.1528C40.1986 34.8946 40.4782 34.7558 40.7361 34.842L43.8612 35.8901C43.9169 35.9089 43.9379 35.8981 43.9448 35.8947C43.9693 35.8826 43.9927 35.8517 44.0046 35.8162C44.0347 35.726 43.9806 35.6997 43.9448 35.6825C40.6174 34.0719 38.3146 30.9052 37.7854 27.2119C37.393 24.4776 36.2598 21.9003 34.5082 19.7587C32.7084 17.5584 30.3253 15.9153 27.6164 15.0071C24.9075 14.0984 22.0156 13.9725 19.2533 14.6429C16.5648 15.2954 14.1068 16.6684 12.1452 18.6132C10.8496 19.8982 9.24716 20.8569 7.51134 21.3855C5.77167 21.9176 3.90844 22.0118 2.12321 21.6576C2.08426 21.6498 2.01987 21.6371 1.99285 21.7391C1.96593 21.8406 2.02796 21.8613 2.06503 21.8736L9.24707 24.282C9.5001 24.3669 9.63963 24.6377 9.56193 24.8931C9.56065 24.8975 9.55887 24.903 9.55739 24.9073C7.10911 32.2133 11.0594 40.1495 18.3633 42.5983C25.6685 45.0477 33.605 41.0972 36.0554 33.7925C36.142 33.5344 36.4217 33.3954 36.6796 33.4819L37.8786 33.884C38.1367 33.9706 38.2758 34.2501 38.1892 34.5083C38.1026 34.7666 37.8231 34.9055 37.565 34.8191L36.8258 34.5712C34.6016 40.5498 28.8918 44.3101 22.7939 44.3103Z" fill="#383839"/>
<path d="M22.8171 40.2097C21.6552 40.2097 20.4887 40.021 19.3548 39.6407C16.606 38.7189 14.3807 36.7819 13.0889 34.1864C11.7971 31.591 11.5933 28.6478 12.5151 25.8989C12.6016 25.6407 12.8812 25.5017 13.1394 25.5882C13.3975 25.6748 13.5367 25.9542 13.4501 26.2125C11.7202 31.3714 14.5097 36.9759 19.6685 38.7058C22.1681 39.544 24.8442 39.3588 27.2041 38.1845C29.5639 37.01 31.3248 34.987 32.1629 32.4878C32.2495 32.2296 32.5291 32.0906 32.7871 32.1771C33.0453 32.2637 33.1843 32.5431 33.0977 32.8014C32.1759 35.5502 30.239 37.7755 27.6434 39.0673C26.1183 39.8262 24.4725 40.2096 22.8171 40.2097Z" fill="#383839"/>
<path d="M33.1426 29.1451C33.09 29.1451 33.0371 29.1368 32.9858 29.1195L14.824 23.0283C14.668 22.9759 14.5484 22.8492 14.5051 22.6904C14.4619 22.5317 14.5007 22.3618 14.6086 22.2375C17.5035 18.9032 22.0762 17.6551 26.2574 19.0579C28.9167 19.95 31.1003 21.8076 32.4061 24.2886C32.5329 24.5295 32.4404 24.8277 32.1994 24.9545C31.9585 25.0813 31.6602 24.9888 31.5334 24.7478C30.3463 22.4924 28.3612 20.8037 25.9437 19.9927C22.3798 18.797 18.5041 19.7195 15.8647 22.3371L32.5716 27.9404C32.4895 27.3741 32.3581 26.8145 32.1787 26.2691C32.0937 26.0104 32.2343 25.7318 32.4931 25.6467C32.7516 25.5614 33.0304 25.7023 33.1156 25.9609C33.399 26.8226 33.5736 27.7168 33.6346 28.6187C33.6457 28.7828 33.5742 28.9417 33.4439 29.0422C33.3564 29.1099 33.2502 29.1451 33.1426 29.1451Z" fill="#383839"/>
<path d="M36.5232 34.442C36.4712 34.442 36.4184 34.4337 36.3664 34.4163L27.5282 31.4528C27.2701 31.3663 27.131 31.0868 27.2176 30.8285C27.3043 30.5704 27.584 30.4314 27.8418 30.5178L36.6798 33.4812C36.938 33.5678 37.0771 33.8473 36.9905 34.1054C36.9215 34.3117 36.7293 34.442 36.5232 34.442Z" fill="#383839"/>
<path d="M25.4139 30.7176C25.3619 30.7176 25.309 30.7093 25.257 30.6919L7.26851 24.6598C7.01035 24.5732 6.87122 24.2938 6.95789 24.0356C7.04447 23.7774 7.32413 23.6383 7.58209 23.725L25.5706 29.757C25.8287 29.8436 25.9678 30.1231 25.8812 30.3813C25.812 30.5874 25.62 30.7176 25.4139 30.7176Z" fill="#383839"/>
<path d="M38.3135 33.0318C38.2613 33.0318 38.2084 33.0235 38.1568 33.0062L34.1493 31.6623C33.8912 31.5757 33.7521 31.2962 33.8387 31.0381C33.9254 30.7799 34.205 30.6408 34.4629 30.7274L37.229 31.6551C36.738 30.7039 36.3657 29.6952 36.1178 28.6433C36.0554 28.3783 36.2196 28.1128 36.4847 28.0504C36.7504 27.9879 37.0153 28.1522 37.0777 28.4172C37.4021 29.794 37.9568 31.09 38.7266 32.2694C38.8413 32.4452 38.8321 32.6743 38.7038 32.8404C38.6086 32.9633 38.4633 33.0318 38.3135 33.0318Z" fill="white"/>
<path d="M36.2505 27.1212C36.0207 27.1212 35.815 26.9597 35.7677 26.7257C35.3075 24.4467 34.2587 22.3286 32.7347 20.6005C31.2058 18.8671 29.2265 17.558 27.0103 16.8149L26.9952 16.8099C23.7882 15.7388 20.3457 15.9199 17.3006 17.3197C17.0532 17.4333 16.7604 17.325 16.6467 17.0776C16.533 16.8302 16.6414 16.5374 16.8888 16.4237C20.1624 14.919 23.8622 14.7239 27.307 15.8744L27.3227 15.8796C29.7042 16.6783 31.831 18.0851 33.4744 19.9483C35.1127 21.8061 36.24 24.0821 36.7345 26.5305C36.7883 26.7975 36.6157 27.0575 36.3487 27.1114C36.3157 27.118 36.2828 27.1212 36.2505 27.1212Z" fill="white"/>
<path d="M10.4082 22.1717C10.2356 22.1717 10.0681 22.0809 9.97765 21.9196C9.84443 21.6821 9.92904 21.3816 10.1666 21.2484C11.1248 20.7112 12.0084 20.0444 12.7931 19.2666C13.4954 18.5703 14.2687 17.9464 15.0917 17.4125C15.3203 17.2644 15.6256 17.3292 15.7737 17.5577C15.9219 17.7861 15.857 18.0915 15.6285 18.2397C14.8621 18.737 14.1416 19.3182 13.4873 19.967C12.6395 20.8073 11.6846 21.5278 10.6488 22.1086C10.5727 22.1513 10.4898 22.1717 10.4082 22.1717Z" fill="white"/>
<path d="M13.0121 24.5473C12.9602 24.5473 12.9073 24.539 12.8553 24.5216L8.35499 23.0125C8.09683 22.9259 7.95769 22.6464 8.04427 22.3882C8.13085 22.13 8.41021 21.991 8.66857 22.0774L13.1688 23.5866C13.427 23.6731 13.5661 23.9526 13.4795 24.2108C13.4105 24.417 13.2182 24.5473 13.0121 24.5473Z" fill="white"/>
<path d="M15.9044 25.5172C15.8524 25.5172 15.7996 25.5089 15.7476 25.4915L14.4619 25.0603C14.2038 24.9738 14.0646 24.6943 14.1512 24.436C14.2378 24.1779 14.5172 24.0387 14.7755 24.1253L16.0612 24.5564C16.3193 24.643 16.4585 24.9225 16.3719 25.1807C16.3027 25.387 16.1105 25.5172 15.9044 25.5172Z" fill="white"/>
<path d="M31.6544 30.7991C31.6024 30.7991 31.5496 30.7908 31.4975 30.7733L17.6763 26.1385C17.4181 26.0519 17.279 25.7724 17.3656 25.5142C17.4521 25.256 17.7316 25.1169 17.9899 25.2035L31.8111 29.8383C32.0692 29.9249 32.2083 30.2043 32.1217 30.4626C32.0526 30.6688 31.8605 30.7991 31.6544 30.7991Z" fill="white"/>
<path d="M13.6384 37.9907C13.5021 37.9907 13.3665 37.9346 13.2691 37.8245C10.8377 35.0794 9.69599 31.4291 10.1369 27.8094C10.1698 27.5391 10.4158 27.3469 10.6859 27.3796C10.9562 27.4125 11.1487 27.6584 11.1158 27.9286C10.709 31.2683 11.7629 34.6369 14.0072 37.1707C14.1878 37.3746 14.1689 37.6863 13.9651 37.8667C13.8713 37.9498 13.7545 37.9907 13.6384 37.9907Z" fill="white"/>
<path d="M16.0337 40.0746C15.9403 40.0746 15.8457 40.048 15.762 39.9925C15.5308 39.8395 15.3021 39.6769 15.0821 39.5093C14.8654 39.3444 14.8235 39.035 14.9886 38.8184C15.1536 38.6017 15.463 38.5598 15.6795 38.7249C15.8824 38.8793 16.0933 39.0292 16.3065 39.1705C16.5335 39.3208 16.5957 39.6268 16.4453 39.8538C16.3505 39.997 16.1936 40.0746 16.0337 40.0746Z" fill="white"/>
<path d="M22.8065 42.1123C21.4541 42.1123 20.0906 41.8965 18.7648 41.4537L18.751 41.4492C18.3865 41.3269 18.0257 41.1877 17.6767 41.0349C17.4273 40.9256 17.3136 40.6348 17.4229 40.3855C17.5322 40.1361 17.823 40.0226 18.0723 40.1316C18.3945 40.2728 18.7277 40.4013 19.0627 40.5137L19.0768 40.5184C23.2209 41.9022 27.7678 40.8829 30.9434 37.8578C31.1408 37.6699 31.4527 37.6774 31.6404 37.8747C31.8283 38.0719 31.8207 38.3839 31.6236 38.5717C29.1988 40.8818 26.0351 42.1123 22.8065 42.1123Z" fill="white"/>
<path d="M32.7178 37.0745C32.6169 37.0745 32.5149 37.0437 32.4273 36.9795C32.2075 36.8188 32.1594 36.5104 32.3201 36.2905C32.5979 35.9103 32.8553 35.5092 33.085 35.0983C33.2177 34.8607 33.5179 34.7756 33.7559 34.9085C33.9936 35.0413 34.0786 35.3418 33.9457 35.5794C33.6968 36.025 33.4177 36.4601 33.1163 36.8724C33.0197 37.0044 32.8697 37.0745 32.7178 37.0745Z" fill="white"/>
<path d="M39.1259 35.3208C39.0933 35.3208 39.0618 35.3179 39.0292 35.3119C38.9977 35.305 38.9671 35.2952 38.9375 35.2833C38.9078 35.2705 38.8793 35.2557 38.8517 35.238C38.825 35.2202 38.8003 35.1995 38.7768 35.1768C38.685 35.0851 38.6328 34.9579 38.6328 34.8278C38.6328 34.7962 38.6357 34.7637 38.6427 34.7321C38.6486 34.7006 38.6585 34.669 38.6703 34.6394C38.6831 34.6098 38.6978 34.5812 38.7156 34.5546C38.7334 34.527 38.7541 34.5024 38.7768 34.4797C38.8003 34.457 38.825 34.4363 38.8517 34.4185C38.8793 34.3998 38.9078 34.385 38.9375 34.3732C38.9671 34.3604 38.9976 34.3505 39.0292 34.3446C39.0933 34.3318 39.1584 34.3318 39.2225 34.3446C39.2541 34.3505 39.2846 34.3604 39.3142 34.3732C39.3439 34.385 39.3725 34.3998 39.4 34.4185C39.4267 34.4363 39.4523 34.457 39.4749 34.4797C39.4976 34.5024 39.5183 34.527 39.5361 34.5546C39.5539 34.5812 39.5686 34.6098 39.5814 34.6394C39.5933 34.669 39.6032 34.7006 39.609 34.7321C39.6159 34.7637 39.619 34.7962 39.619 34.8278C39.619 34.9579 39.5667 35.0851 39.4749 35.1768C39.3821 35.2685 39.2549 35.3208 39.1259 35.3208Z" fill="#383839"/>
<path d="M39.0888 33.2912C39.0371 33.2912 38.9843 33.283 38.9325 33.2656L38.1573 33.0067C37.899 32.9204 37.7596 32.6411 37.8459 32.3828C37.9321 32.1244 38.2117 31.9854 38.4697 32.0713L39.2449 32.3302C39.5032 32.4165 39.6426 32.6959 39.5563 32.9541C39.4874 33.1606 39.2951 33.2912 39.0888 33.2912Z" fill="white"/>
<path d="M8.31925 22.9797C8.26748 22.9797 8.21482 22.9715 8.16305 22.9541L7.38778 22.6952C7.12952 22.6089 6.99009 22.3296 7.07627 22.0713C7.16265 21.813 7.44202 21.6738 7.70018 21.7598L8.47544 22.0187C8.7337 22.105 8.87314 22.3844 8.78695 22.6426C8.71783 22.8491 8.52554 22.9797 8.31925 22.9797Z" fill="white"/>
<path d="M39.206 44.7568C38.0098 44.7568 37.0366 43.7836 37.0366 42.5874C37.0366 41.3911 38.0098 40.418 39.206 40.418C40.4023 40.418 41.3754 41.3911 41.3754 42.5874C41.3754 43.7836 40.4023 44.7568 39.206 44.7568ZM39.206 41.4041C38.5535 41.4041 38.0227 41.9349 38.0227 42.5874C38.0227 43.2399 38.5535 43.7707 39.206 43.7707C39.8585 43.7707 40.3893 43.2399 40.3893 42.5874C40.3893 41.9349 39.8585 41.4041 39.206 41.4041Z" fill="#383839"/>
<path d="M59.6424 46L51.0984 12.4H57.6264L64.7304 41.92H65.4024L72.5064 12.4H79.0344L70.4904 46H59.6424ZM89.7051 46.672C88.0091 46.672 86.4891 46.384 85.1451 45.808C83.8011 45.2 82.7291 44.336 81.9291 43.216C81.1611 42.064 80.7771 40.672 80.7771 39.04C80.7771 37.408 81.1611 36.048 81.9291 34.96C82.7291 33.84 83.8171 33.008 85.1931 32.464C86.6011 31.888 88.2011 31.6 89.9931 31.6H96.5211V30.256C96.5211 29.136 96.1691 28.224 95.4651 27.52C94.7611 26.784 93.6411 26.416 92.1051 26.416C90.6011 26.416 89.4811 26.768 88.7451 27.472C88.0091 28.144 87.5291 29.024 87.3051 30.112L81.7371 28.24C82.1211 27.024 82.7291 25.92 83.5611 24.928C84.4251 23.904 85.5611 23.088 86.9691 22.48C88.4091 21.84 90.1531 21.52 92.2011 21.52C95.3371 21.52 97.8171 22.304 99.6411 23.872C101.465 25.44 102.377 27.712 102.377 30.688V39.568C102.377 40.528 102.825 41.008 103.721 41.008H105.641V46H101.609C100.425 46 99.4491 45.712 98.6811 45.136C97.9131 44.56 97.5291 43.792 97.5291 42.832V42.784H96.6171C96.4891 43.168 96.2011 43.68 95.7531 44.32C95.3051 44.928 94.6011 45.472 93.6411 45.952C92.6811 46.432 91.3691 46.672 89.7051 46.672ZM90.7611 41.776C92.4571 41.776 93.8331 41.312 94.8891 40.384C95.9771 39.424 96.5211 38.16 96.5211 36.592V36.112H90.4251C89.3051 36.112 88.4251 36.352 87.7851 36.832C87.1451 37.312 86.8251 37.984 86.8251 38.848C86.8251 39.712 87.1611 40.416 87.8331 40.96C88.5051 41.504 89.4811 41.776 90.7611 41.776ZM110.563 46V22.192H116.515V25.312H117.379C117.763 24.48 118.483 23.696 119.539 22.96C120.595 22.192 122.195 21.808 124.339 21.808C126.195 21.808 127.811 22.24 129.187 23.104C130.595 23.936 131.683 25.104 132.451 26.608C133.219 28.08 133.603 29.808 133.603 31.792V46H127.555V32.272C127.555 30.48 127.107 29.136 126.211 28.24C125.347 27.344 124.099 26.896 122.467 26.896C120.611 26.896 119.171 27.52 118.147 28.768C117.123 29.984 116.611 31.696 116.611 33.904V46H110.563ZM149.105 46C147.537 46 146.257 45.52 145.265 44.56C144.305 43.568 143.825 42.256 143.825 40.624V27.184H137.873V22.192H143.825V14.8H149.873V22.192H156.401V27.184H149.873V39.568C149.873 40.528 150.321 41.008 151.217 41.008H155.825V46H149.105ZM169.768 46.672C168.072 46.672 166.552 46.384 165.208 45.808C163.864 45.2 162.792 44.336 161.992 43.216C161.224 42.064 160.84 40.672 160.84 39.04C160.84 37.408 161.224 36.048 161.992 34.96C162.792 33.84 163.88 33.008 165.256 32.464C166.664 31.888 168.264 31.6 170.056 31.6H176.584V30.256C176.584 29.136 176.232 28.224 175.528 27.52C174.824 26.784 173.704 26.416 172.168 26.416C170.664 26.416 169.544 26.768 168.808 27.472C168.072 28.144 167.592 29.024 167.368 30.112L161.8 28.24C162.184 27.024 162.792 25.92 163.624 24.928C164.488 23.904 165.624 23.088 167.032 22.48C168.472 21.84 170.216 21.52 172.264 21.52C175.4 21.52 177.88 22.304 179.704 23.872C181.528 25.44 182.44 27.712 182.44 30.688V39.568C182.44 40.528 182.888 41.008 183.784 41.008H185.704V46H181.672C180.488 46 179.512 45.712 178.744 45.136C177.976 44.56 177.592 43.792 177.592 42.832V42.784H176.68C176.552 43.168 176.264 43.68 175.816 44.32C175.368 44.928 174.664 45.472 173.704 45.952C172.744 46.432 171.432 46.672 169.768 46.672ZM170.824 41.776C172.52 41.776 173.896 41.312 174.952 40.384C176.04 39.424 176.584 38.16 176.584 36.592V36.112H170.488C169.368 36.112 168.488 36.352 167.848 36.832C167.208 37.312 166.888 37.984 166.888 38.848C166.888 39.712 167.224 40.416 167.896 40.96C168.568 41.504 169.544 41.776 170.824 41.776Z" fill="#00FFBB"/>
<path d="M196.51 46L187.966 12.4H194.494L201.598 41.92H202.27L209.374 12.4H215.902L207.358 46H196.51ZM220.441 46V12.4H234.265C236.377 12.4 238.233 12.832 239.833 13.696C241.465 14.528 242.729 15.712 243.625 17.248C244.553 18.784 245.017 20.608 245.017 22.72V23.392C245.017 25.472 244.537 27.296 243.577 28.864C242.649 30.4 241.369 31.6 239.737 32.464C238.137 33.296 236.313 33.712 234.265 33.712H226.777V46H220.441ZM226.777 27.952H233.641C235.145 27.952 236.361 27.536 237.289 26.704C238.217 25.872 238.681 24.736 238.681 23.296V22.816C238.681 21.376 238.217 20.24 237.289 19.408C236.361 18.576 235.145 18.16 233.641 18.16H226.777V27.952ZM249.91 46V12.4H261.958L268.63 41.68H269.494V12.4H275.734V46H263.686L257.014 16.72H256.15V46H249.91Z" fill="#3A50E0"/>
</svg>
`,"calendar-off":(e="")=>`<svg class="${e}" width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.15 3.65C2.88633 3.76503 2.66129 3.95345 2.50172 4.19281C2.34215 4.43217 2.25477 4.71237 2.25 5V15.5C2.25 15.8978 2.40804 16.2794 2.68934 16.5607C2.97064 16.842 3.35218 17 3.75 17H14.25C14.5385 16.9994 14.8208 16.9156 15.0629 16.7586C15.305 16.6016 15.4967 16.3782 15.615 16.115M15.75 12.125V5C15.75 4.60218 15.592 4.22064 15.3107 3.93934C15.0294 3.65804 14.6478 3.5 14.25 3.5H7.125M12 2V5M2.25 8H7.5M15.75 8H11.625M1.5 2L16.5 17" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,codepan:(e="")=>`<svg class="${e}" width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9 2L16.5 6.875M9 2L1.5 6.875M9 2V6.875M16.5 6.875V12.125M16.5 6.875L9 12.125M16.5 12.125L9 17M16.5 12.125L9 6.875M9 17L1.5 12.125M9 17V12.125M1.5 12.125V6.875M1.5 12.125L9 6.875M1.5 6.875L9 12.125" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,"earth-lock":(e="")=>`<svg class="${e}" width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5.24997 3.005V4.25C5.24997 4.84674 5.48703 5.41903 5.90898 5.84099C6.33094 6.26295 6.90324 6.5 7.49997 6.5M8.24997 16.9625V14C8.24997 13.6022 8.09194 13.2206 7.81063 12.9393C7.52933 12.658 7.1478 12.5 6.74997 12.5C6.35215 12.5 5.97062 12.342 5.68931 12.0607C5.40801 11.7794 5.24997 11.3978 5.24997 11V10.25C5.24997 9.85218 5.09194 9.47064 4.81064 9.18934C4.52933 8.90804 4.1478 8.75 3.74997 8.75H1.53747M11.25 16.655V13.25C11.25 12.8522 11.408 12.4706 11.6893 12.1893C11.9706 11.908 12.3521 11.75 12.75 11.75H16.155C15.7391 13.0723 14.965 14.2535 13.9184 15.1625C12.8719 16.0714 11.5939 16.6725 10.2264 16.8991C8.85885 17.1257 7.45529 16.9689 6.17151 16.446C4.88773 15.9232 3.77397 15.0548 2.95387 13.9372C2.13377 12.8197 1.63942 11.4968 1.52571 10.1153C1.412 8.73378 1.68336 7.3478 2.30969 6.1112C2.93601 4.87461 3.89278 3.83578 5.07379 3.11005C6.25479 2.38432 7.61381 2.00008 8.99997 2M15 5V3.5C15 3.10218 14.8419 2.72064 14.5606 2.43934C14.2793 2.15804 13.8978 2 13.5 2C13.1021 2 12.7206 2.15804 12.4393 2.43934C12.158 2.72064 12 3.10218 12 3.5V5M11.25 5H15.75C16.1642 5 16.5 5.33579 16.5 5.75V8C16.5 8.41421 16.1642 8.75 15.75 8.75H11.25C10.8358 8.75 10.5 8.41421 10.5 8V5.75C10.5 5.33579 10.8358 5 11.25 5Z" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,nodes:(e="")=>`<svg class="${e}" width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20.4 12.6L12.6 20.4M14 24C14 26.7614 11.7614 29 9 29C6.23858 29 4 26.7614 4 24C4 21.2386 6.23858 19 9 19C11.7614 19 14 21.2386 14 24ZM14 24H34M34 24C34 26.7614 36.2386 29 39 29C41.7614 29 44 26.7614 44 24C44 21.2386 41.7614 19 39 19C36.2386 19 34 21.2386 34 24ZM27.6 35.4L35.4 27.6M29 9C29 11.7614 26.7614 14 24 14C21.2386 14 19 11.7614 19 9C19 6.23858 21.2386 4 24 4C26.7614 4 29 6.23858 29 9ZM29 39C29 41.7614 26.7614 44 24 44C21.2386 44 19 41.7614 19 39C19 36.2386 21.2386 34 24 34C26.7614 34 29 36.2386 29 39Z" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,target:(e="")=>`<svg class="${e}" width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M24 44C35.0457 44 44 35.0457 44 24C44 12.9543 35.0457 4 24 4C12.9543 4 4 12.9543 4 24C4 35.0457 12.9543 44 24 44Z" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M24 36C30.6274 36 36 30.6274 36 24C36 17.3726 30.6274 12 24 12C17.3726 12 12 17.3726 12 24C12 30.6274 17.3726 36 24 36Z" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M24 28C26.2091 28 28 26.2091 28 24C28 21.7909 26.2091 20 24 20C21.7909 20 20 21.7909 20 24C20 26.2091 21.7909 28 24 28Z" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,vault:(e="")=>`<svg class="${e}" width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.8 15.8L21.2 21.2M26.8 21.2L32.2 15.8M15.8 32.2L21.2 26.8M26.8 26.8L32.2 32.2M10 6H38C40.2091 6 42 7.79086 42 10V38C42 40.2091 40.2091 42 38 42H10C7.79086 42 6 40.2091 6 38V10C6 7.79086 7.79086 6 10 6ZM16 15C16 15.5523 15.5523 16 15 16C14.4477 16 14 15.5523 14 15C14 14.4477 14.4477 14 15 14C15.5523 14 16 14.4477 16 15ZM34 15C34 15.5523 33.5523 16 33 16C32.4477 16 32 15.5523 32 15C32 14.4477 32.4477 14 33 14C33.5523 14 34 14.4477 34 15ZM16 33C16 33.5523 15.5523 34 15 34C14.4477 34 14 33.5523 14 33C14 32.4477 14.4477 32 15 32C15.5523 32 16 32.4477 16 33ZM34 33C34 33.5523 33.5523 34 33 34C32.4477 34 32 33.5523 32 33C32 32.4477 32.4477 32 33 32C33.5523 32 34 32.4477 34 33ZM28 24C28 26.2091 26.2091 28 24 28C21.7909 28 20 26.2091 20 24C20 21.7909 21.7909 20 24 20C26.2091 20 28 21.7909 28 24Z" stroke="#00FFBB" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,rotate:(e="")=>`<svg class="${e}" width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17.8382 8.12533C16.9466 4.59041 15.1147 2.16699 13 2.16699C10.0089 2.16699 7.58335 7.01708 7.58335 13.0003C7.58335 18.9836 10.0089 23.8337 13 23.8337C13.3705 23.8337 13.7334 23.7589 14.0834 23.617M16.4602 14.8496L20.592 16.8646L18.577 20.9964M20.5834 16.8678C18.629 17.8266 15.9532 18.417 13 18.417C7.01677 18.417 2.16669 15.9914 2.16669 13.0003C2.16669 10.0092 7.01677 7.58366 13 7.58366C18.2412 7.58366 22.6124 9.44483 23.6167 11.917" stroke="#0E66FF" stroke-opacity="0.8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,mask:(e="")=>`<svg class="${e}" width="27" height="26" viewBox="0 0 27 26" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.3333 11.917H11.3442M15.6667 6.50033H15.6775M20 6.50033H20.0108M7.54165 14.192H7.55249M19.35 10.7253C18.4833 11.592 17.1833 11.592 16.3167 10.7253M11.4417 7.69199C10.25 7.80033 8.84165 8.34199 6.99999 9.31699C3.20832 11.4837 1.90832 13.542 2.99165 15.3837C7.86665 23.8337 13.2833 24.4837 15.125 23.4003C16.1 22.8587 17.1833 21.1253 17.1833 18.3087M10.3583 17.8753C10.6833 16.6837 11.875 16.0337 12.9583 16.3587M24.3333 5.41699C24.3333 15.167 20 18.417 17.8333 18.417C15.6667 18.417 11.3333 15.167 11.3333 5.41699C11.3333 3.25033 13.5 2.16699 17.8333 2.16699C22.1667 2.16699 24.3333 3.25033 24.3333 5.41699Z" stroke="#0E66FF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,wand:(e="")=>`<svg class="${e}" width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.1667 7.58366L18.4167 10.8337M5.4167 6.50033V10.8337M20.5834 15.167V19.5003M10.8334 2.16699V4.33366M7.58336 8.66699H3.25003M22.75 17.3337H18.4167M11.9167 3.25033H9.75003M23.4434 3.94366L22.0567 2.55699C21.9348 2.43384 21.7897 2.33607 21.6298 2.26934C21.4699 2.20262 21.2983 2.16827 21.125 2.16827C20.9518 2.16827 20.7802 2.20262 20.6203 2.26934C20.4604 2.33607 20.3153 2.43384 20.1934 2.55699L2.5567 20.1937C2.43354 20.3155 2.33577 20.4607 2.26905 20.6206C2.20232 20.7805 2.16797 20.952 2.16797 21.1253C2.16797 21.2986 2.20232 21.4702 2.26905 21.6301C2.33577 21.79 2.43354 21.9351 2.5567 22.057L3.94336 23.4437C4.0645 23.5681 4.20936 23.6671 4.36938 23.7346C4.5294 23.8022 4.70133 23.837 4.87503 23.837C5.04873 23.837 5.22066 23.8022 5.38068 23.7346C5.5407 23.6671 5.68556 23.5681 5.8067 23.4437L23.4434 5.80699C23.5678 5.68585 23.6668 5.541 23.7344 5.38098C23.8019 5.22096 23.8367 5.04902 23.8367 4.87533C23.8367 4.70163 23.8019 4.52969 23.7344 4.36967C23.6668 4.20965 23.5678 4.0648 23.4434 3.94366Z" stroke="#0E66FF" stroke-opacity="0.8" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,rocket:(e="")=>`<svg class="${e}" width="27" height="26" viewBox="0 0 27 26" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13.5 16.2496L10.25 12.9996M13.5 16.2496C15.0133 15.6741 16.465 14.9482 17.8334 14.083M13.5 16.2496V21.6663C13.5 21.6663 16.7825 21.0704 17.8334 19.4996C19.0034 17.7446 17.8334 14.083 17.8334 14.083M10.25 12.9996C10.8265 11.504 11.5524 10.0704 12.4167 8.72045C13.679 6.70219 15.4366 5.04042 17.5225 3.89322C19.6083 2.74601 21.9529 2.15152 24.3334 2.16628C24.3334 5.11295 23.4884 10.2913 17.8334 14.083M10.25 12.9996H4.83337C4.83337 12.9996 5.42921 9.71712 7.00004 8.66628C8.75504 7.49628 12.4167 8.66628 12.4167 8.66628M5.37504 17.8746C3.75004 19.2396 3.20837 23.2913 3.20837 23.2913C3.20837 23.2913 7.26004 22.7496 8.62504 21.1246C9.39421 20.2146 9.38337 18.8171 8.52754 17.9721C8.10646 17.5702 7.55178 17.338 6.96995 17.32C6.38813 17.302 5.82016 17.4995 5.37504 17.8746Z" stroke="#0E66FF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`,windows:(e="")=>`<svg class="${e}" width="69" height="68" viewBox="0 0 69 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M35.7233 35.2236H63.6429V63.1431H35.7233V35.2236ZM5.35718 35.2236H33.2768V63.1431H5.35718V35.2236ZM35.7233 4.85742H63.6429V32.777H35.7233V4.85742ZM5.35718 4.85742H33.2768V32.777H5.35718V4.85742Z" fill="#D9DBDE"/>
</svg>
`,firefox:(e="")=>`<svg class="${e}" width="69" height="68" viewBox="0 0 69 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M61.7964 31.5578C61.7581 31.2842 61.7013 31.0134 61.6264 30.7475L61.0965 31.4161C61.0046 30.1941 60.7882 28.9846 60.4506 27.8065C60.0276 26.3302 59.467 24.8968 58.7761 23.5253C58.3545 22.6074 57.8419 21.7342 57.2461 20.9186C56.9372 20.437 56.6709 20.08 56.6199 20.0063C55.5942 18.3375 54.4467 17.3231 53.0811 15.4135C52.2158 13.9469 51.6253 12.3348 51.3386 10.6563C50.956 11.6633 50.6686 12.7039 50.48 13.7645C49.1115 12.379 47.8932 11.3675 47.1707 10.7045C43.5809 7.35265 44.0172 5.63281 44.0172 5.63281C44.0172 5.63281 37.3192 13.0986 40.2149 20.8676C41.2184 23.5123 42.9515 25.8182 45.2129 27.5175C48.0151 29.821 51.0269 31.6315 52.6051 36.3036C51.3383 33.8491 49.4072 31.8002 47.0319 30.3905C47.7487 32.0961 48.1086 33.8811 48.0831 35.7285C48.0819 37.3921 47.7529 39.0392 47.1148 40.5756C46.4767 42.112 45.542 43.5076 44.3642 44.6825C43.1864 45.8574 41.7885 46.7887 40.2506 47.423C38.7126 48.0573 37.0647 48.3823 35.4011 48.3793C34.462 48.3848 33.5254 48.2811 32.6102 48.0705C31.5189 47.8637 30.4628 47.5021 29.4737 46.9966C27.9865 46.1135 26.6993 44.9305 25.6941 43.523V43.5031C25.7623 43.5333 25.8335 43.5561 25.9066 43.5711C26.4364 43.761 26.9606 43.9055 27.5131 44.0046C29.658 44.4543 31.891 44.1927 33.8739 43.2595C35.8799 42.1375 37.1011 41.3186 38.0786 41.6331C39.0646 41.942 39.8012 41.0098 39.1354 40.0323C38.5495 39.2737 37.7672 38.6899 36.8731 38.3443C35.9791 37.9986 35.0075 37.9044 34.0637 38.0716C32.0492 38.3578 30.2104 39.7688 27.6037 38.4031C27.4139 38.3125 27.2722 38.2161 27.1051 38.117C26.9351 37.998 27.6774 38.2615 27.4847 38.1425C26.9091 37.8604 26.3576 37.5316 25.8357 37.1593C25.8102 37.1338 26.2466 37.2811 26.1927 37.2528C25.5108 36.7905 24.9256 36.1996 24.4701 35.5131C24.2445 35.0919 24.1171 34.6251 24.0975 34.1477C24.0778 33.6703 24.1665 33.1946 24.3567 32.7563C24.6013 32.3171 24.978 31.9662 25.4334 31.7533L25.9774 32.0366C25.9774 32.0366 25.8102 31.7533 25.7366 31.6088C25.7649 31.5861 25.7904 31.6088 25.8357 31.5861C26.1247 31.7051 26.7679 32.0366 27.1249 32.2548C27.3641 32.3803 27.5701 32.5609 27.7256 32.7818C27.7256 32.7818 27.8474 32.7336 27.7511 32.4758C27.6346 32.1626 27.4134 31.8993 27.1249 31.7306H27.1759C27.4394 31.8751 27.6802 32.0196 27.9154 32.2038C28.1307 31.6768 28.2526 31.1611 28.2327 30.6086C28.2496 30.3079 28.2083 30.0068 28.1109 29.7218C28.0117 29.532 28.1591 29.4583 28.3234 29.651C28.2967 29.5011 28.248 29.356 28.1789 29.2203C28.1789 29.2203 28.2752 29.0758 28.3234 29.0446C28.4452 28.9313 28.5614 28.8123 28.7087 28.7415C29.5389 28.2173 30.4059 27.7583 31.3154 27.3985C31.8109 27.2043 32.2977 26.9887 32.7746 26.7525C32.9644 26.6335 33.1344 26.5145 33.3016 26.3671C33.9249 25.843 34.3329 25.1261 34.4717 24.3328C34.5001 24.2195 34.5001 24.1231 34.5001 24.0296V23.8341C34.4037 23.4261 33.7096 23.14 30.0999 22.7801C29.4764 22.6849 28.8963 22.4034 28.4357 21.9726C27.9751 21.5418 27.6554 20.9818 27.5187 20.3661V20.386C27.4653 20.522 27.4171 20.66 27.3742 20.7996C27.4196 20.6495 27.4677 20.5333 27.5187 20.386V20.3661C28.2096 18.5657 29.4472 17.0269 31.0576 15.966C31.1454 15.8951 30.7006 15.9858 30.7941 15.9178C31.0831 15.7733 31.3919 15.626 31.7262 15.507C31.8934 15.456 31.0321 15.1273 30.2671 15.1953C29.8067 15.2279 29.3544 15.3331 28.9269 15.507C29.1167 15.3681 29.6409 15.1726 29.5219 15.1726C28.5504 15.3439 27.6188 15.6926 26.7736 16.2011C26.7736 16.1076 26.8019 16.0311 26.8246 15.966C26.1529 16.2484 25.5668 16.7016 25.1246 17.2806V16.9633C24.8264 17.2064 24.547 17.4716 24.2887 17.7566H24.2661C22.2768 16.9865 20.1079 16.8056 18.0186 17.2353L17.9959 17.2098H18.0186C17.5833 16.8624 17.2122 16.4414 16.9221 15.966L16.8937 15.9858L16.8512 15.9405C16.7011 15.7478 16.5877 15.5098 16.4347 15.2435C16.3214 15.0735 16.2251 14.8581 16.1061 14.6485C16.1061 14.6485 16.1061 14.6258 16.0834 14.6258C16.0551 14.6258 16.0097 14.844 15.9899 14.7646C15.6215 13.8145 15.4489 12.7997 15.4827 11.7811H15.4601C14.8601 12.1775 14.4125 12.766 14.1907 13.45C14.0746 13.6936 14.0009 13.8126 13.9301 13.9571V13.8778L13.9981 13.5236C13.9811 13.5491 13.9811 13.5718 13.9499 13.5945C13.7806 13.7924 13.6377 14.0114 13.5249 14.2461C13.4007 14.4633 13.3028 14.6944 13.2331 14.9346V14.8156C13.2331 14.7193 13.2586 14.5748 13.2331 14.6258L13.2076 14.691C12.4347 16.3956 11.9502 18.2167 11.7739 20.08C11.7286 20.4143 11.7286 20.726 11.7286 21.0348V21.0858C11.1818 21.6823 10.694 22.3304 10.2722 23.021C8.88244 25.3664 7.84925 27.9054 7.20656 30.5548C7.66272 29.5518 8.20956 28.5686 8.85839 27.662C7.62149 30.7763 6.98785 34.0974 6.99122 37.4483C7.20656 36.468 7.47006 35.5103 7.77889 34.5526C7.58997 38.5122 8.35469 42.4592 10.0087 46.0616C12.2278 51.0466 15.925 55.2294 20.5997 58.0438C22.4877 59.3361 24.5594 60.3371 26.7452 61.0131C27.0342 61.1066 27.3487 61.2228 27.6321 61.322C27.5357 61.271 27.4649 61.2228 27.3714 61.203C29.9626 61.9754 32.6518 62.3695 35.3557 62.3731C44.9522 62.3731 48.1086 58.7125 48.4174 58.3555C48.8707 57.9276 49.2759 57.4176 49.5394 56.8226C49.7321 56.7546 49.8992 56.681 50.0919 56.5846L50.2081 56.5393C50.3526 56.4656 50.4206 56.443 50.4206 56.443C51.874 55.762 53.2409 54.9097 54.4921 53.9043C56.3506 52.5561 57.6796 50.6008 58.2491 48.3765C58.6032 47.5661 58.6032 46.6765 58.3171 45.8435C58.4587 45.6055 58.5834 45.3873 58.6032 45.3391C60.6659 42.0337 61.8364 38.2499 62.0004 34.3571V34.0285C62.0059 33.2005 61.9377 32.3737 61.7964 31.5578Z" fill="#D9DBDE"/>
</svg>
`,chromium:(e="")=>`<svg class="${e}" width="49" height="68" viewBox="0 0 49 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_448_216)">
<path d="M45.8466 23.2834H24.4627C22.4036 23.2834 20.5442 23.9485 18.8846 24.943C16.0286 26.7365 14.1033 29.924 13.9695 33.5089L5.73508 19.231C10.119 13.6529 16.8255 10 24.4627 10C33.8255 10 41.994 15.4464 45.8466 23.2812V23.2834ZM4.67471 20.5613L15.2997 39.0233C15.3656 39.0891 15.3656 39.1571 15.4336 39.223C16.3643 40.8826 17.8242 42.2108 19.5518 43.1415C21.0797 43.8725 22.6735 44.4038 24.467 44.4038C26.2605 44.4038 27.9201 43.8725 29.448 43.1415L21.1477 57.4194C9.59195 55.7598 0.69458 45.8636 0.69458 33.8446C0.69458 28.9295 2.15658 24.348 4.67896 20.5634L4.67471 20.5613ZM30.043 24.9451H46.5776C47.6401 27.6673 48.3052 30.723 48.3052 33.8446C48.3052 46.9941 37.6143 57.6191 24.4648 57.6191C23.9336 57.6191 23.4682 57.6191 22.937 57.5533L33.562 39.2251C33.6278 39.1593 33.6278 39.0912 33.6958 39.0254C34.5586 37.4316 35.024 35.704 35.024 33.8446V33.5131C34.8901 29.9261 32.899 26.7386 30.043 24.9473V24.9451ZM16.562 33.8425C16.562 29.3927 20.0151 25.8738 24.4648 25.8738C28.9146 25.8738 32.4336 29.3927 32.4336 33.8425C32.4336 38.2923 28.9146 41.8113 24.4648 41.8113C20.0151 41.8113 16.562 38.2923 16.562 33.8425Z" fill="#D9DBDE"/>
</g>
<defs>
<clipPath id="clip0_448_216">
<rect width="47.6106" height="67.6191" fill="white" transform="translate(0.69458)"/>
</clipPath>
</defs>
</svg>
`,apple:(e="")=>`<svg class="${e}" width="69" height="68" viewBox="0 0 69 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M44.9411 10.8558C47.42 7.9828 49.0909 3.98133 48.6336 0C45.0615 0.136 40.7398 2.2819 38.1784 5.15146C35.8784 7.69803 33.8705 11.767 34.4103 15.6702C38.395 15.966 42.4623 13.7321 44.9411 10.8558ZM53.8766 36.125C53.9764 46.4167 63.297 49.8402 63.4001 49.8844C63.3245 50.1258 61.9114 54.7625 58.4905 59.5564C55.5304 63.6976 52.4602 67.822 47.6228 67.9104C42.8714 67.9954 41.3415 65.2109 35.9059 65.2109C30.4737 65.2109 28.7753 67.8216 24.2783 67.995C19.6094 68.1616 16.051 63.5146 13.0702 59.3871C6.9711 50.945 2.31252 35.5303 8.5698 25.1265C11.6778 19.9619 17.2303 16.6865 23.2607 16.6049C27.8436 16.5199 32.1721 19.56 34.9742 19.56C37.7762 19.56 43.0364 15.905 48.5648 16.4422C50.8787 16.534 57.3766 17.3361 61.547 23.1874C61.21 23.388 53.7941 27.5231 53.8766 36.125Z" fill="#D9DBDE"/>
</svg>
`,android:(e="")=>`<svg class="${e}" width="69" height="68" viewBox="0 0 69 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M50.1188 26.888L55.4228 17.7016C55.5163 17.5444 55.5715 17.3531 55.5715 17.1491C55.5715 16.5392 55.0785 16.0462 54.4686 16.0462C54.0628 16.0462 53.7079 16.2651 53.5166 16.5924L53.5145 16.5966L48.1446 25.8977C44.1348 24.0554 39.4449 22.9801 34.5043 22.9801C29.5636 22.9801 24.8738 24.0554 20.6556 25.9827L20.8639 25.8977L15.494 16.5945C15.3006 16.263 14.9436 16.042 14.5378 16.042C13.9279 16.042 13.4349 16.535 13.4349 17.1449C13.4349 17.3489 13.4901 17.538 13.5858 17.7016L13.5836 17.6974L18.8876 26.8837C9.77989 31.9136 3.51114 41.1149 2.64627 51.8397L2.63989 51.9502H66.3708C65.4995 41.1149 59.2308 31.9136 50.2845 26.9645L50.123 26.8837L50.1188 26.888ZM19.8333 42.8744C18.367 42.8744 17.1791 41.6865 17.1791 40.2202C17.1791 38.754 18.367 37.5661 19.8333 37.5661C21.2995 37.5661 22.4874 38.754 22.4874 40.2202C22.4853 41.6844 21.2995 42.8722 19.8333 42.8744ZM49.1668 42.8744C47.7005 42.8744 46.5126 41.6865 46.5126 40.2202C46.5126 38.754 47.7005 37.5661 49.1668 37.5661C50.633 37.5661 51.8209 38.754 51.8209 40.2202C51.8188 41.6844 50.633 42.8722 49.1668 42.8744Z" fill="#D9DBDE"/>
</svg>
`,ios:(e="")=>`<svg class="${e}" width="68" height="68" viewBox="0 0 68 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.5833 8.5H52.4167C56.3287 8.5 59.5 11.6713 59.5 15.5833V52.4167C59.5 56.3287 56.3287 59.5 52.4167 59.5H15.5833C11.6713 59.5 8.5 56.3287 8.5 52.4167V15.5833C8.5 11.6713 11.6713 8.5 15.5833 8.5ZM15.5833 11.3333C13.2361 11.3333 11.3333 13.2361 11.3333 15.5833V52.4167C11.3333 54.7639 13.2361 56.6667 15.5833 56.6667H52.4167C54.7639 56.6667 56.6667 54.7639 56.6667 52.4167V15.5833C56.6667 13.2361 54.7639 11.3333 52.4167 11.3333H15.5833ZM22.6667 41.0833C22.6667 41.8657 22.0324 42.5 21.25 42.5C20.4676 42.5 19.8333 41.8657 19.8333 41.0833V32.5833C19.8333 31.8009 20.4676 31.1667 21.25 31.1667C22.0324 31.1667 22.6667 31.8009 22.6667 32.5833V41.0833ZM19.8333 25.5H22.6667V28.3333H19.8333V25.5ZM25.5 38.25V29.75C25.5 27.4028 27.4028 25.5 29.75 25.5H32.5833C34.9305 25.5 36.8333 27.4028 36.8333 29.75V38.25C36.8333 40.5972 34.9305 42.5 32.5833 42.5H29.75C27.4028 42.5 25.5 40.5972 25.5 38.25ZM28.3333 38.25C28.3333 39.0324 28.9676 39.6667 29.75 39.6667H32.5833C33.3657 39.6667 34 39.0324 34 38.25V29.75C34 28.9676 33.3657 28.3333 32.5833 28.3333H29.75C28.9676 28.3333 28.3333 28.9676 28.3333 29.75V38.25ZM51 29.75C51 30.5324 50.3657 31.1667 49.5833 31.1667C48.8009 31.1667 48.1667 30.5324 48.1667 29.75C48.1667 28.9676 47.5324 28.3333 46.75 28.3333H43.9167C43.1343 28.3333 42.5 28.9676 42.5 29.75V30.5412C42.5 31.151 42.8902 31.6923 43.4687 31.8851L48.094 33.4269C49.8294 34.0054 51 35.6295 51 37.4588V38.25C51 40.5972 49.0972 42.5 46.75 42.5H43.9167C41.5695 42.5 39.6667 40.5972 39.6667 38.25C39.6667 37.4676 40.3009 36.8333 41.0833 36.8333C41.8657 36.8333 42.5 37.4676 42.5 38.25C42.5 39.0324 43.1343 39.6667 43.9167 39.6667H46.75C47.5324 39.6667 48.1667 39.0324 48.1667 38.25V37.4588C48.1667 36.849 47.7765 36.3077 47.198 36.1149L42.5727 34.5731C40.8372 33.9946 39.6667 32.3705 39.6667 30.5412V29.75C39.6667 27.4028 41.5695 25.5 43.9167 25.5H46.75C49.0972 25.5 51 27.4028 51 29.75Z" fill="#D9DBDE"/>
</svg>
`,linux:(e="")=>`<svg class="${e}" width="69" height="68" viewBox="0 0 69 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M32.2113 17.1703C32.1582 17.3233 31.9117 17.2999 31.7714 17.3445C31.646 17.4104 31.5441 17.5252 31.3996 17.5252C31.2678 17.5252 31.0553 17.472 31.0383 17.3445C31.0128 17.1703 31.2721 16.9918 31.4357 16.9918C31.5419 16.9408 31.6652 16.9132 31.7948 16.9132C31.9138 16.9132 32.0264 16.9365 32.1284 16.9812L32.122 16.979C32.1688 16.9982 32.2028 17.0428 32.2028 17.0959C32.2028 17.1023 32.2028 17.1065 32.2007 17.1129V17.166H32.2092L32.2113 17.1703ZM33.6733 17.1703V17.1129C33.6563 17.0598 33.7073 17.0024 33.7498 16.9812C33.8476 16.9387 33.9623 16.9132 34.0834 16.9132C34.2131 16.9132 34.3363 16.9429 34.4447 16.9939L34.4404 16.9918C34.6083 16.9918 34.8654 17.1703 34.8378 17.3509C34.8229 17.4805 34.6126 17.5252 34.4787 17.5252C34.3321 17.5252 34.2343 17.4104 34.1047 17.3445C33.9666 17.2957 33.7179 17.3233 33.6712 17.1724L33.6733 17.1703ZM36.5463 21.3735C35.4158 22.0897 34.0792 22.5933 32.6469 22.7888L32.5959 22.7952C31.3082 22.7208 30.1373 22.2682 29.181 21.5457L29.1959 21.5563C28.7879 21.2014 28.4522 20.8444 28.2057 20.6659C27.7701 20.311 27.8232 19.7819 28.0102 19.7819C28.2992 19.8244 28.3523 20.1368 28.5393 20.3132C28.7943 20.4874 29.1109 20.8444 29.4956 21.1972C30.3392 21.8942 31.4059 22.3468 32.5768 22.436L32.5959 22.4382C33.9857 22.317 35.2501 21.8708 36.3423 21.1802L36.3083 21.2014C36.8268 20.8423 37.4898 20.3153 38.0295 19.9604C38.4439 19.5992 38.4248 19.2507 38.7712 19.2507C39.1112 19.2932 38.8626 19.6055 38.3802 20.1325C37.8574 20.532 37.2603 20.9422 36.6419 21.3225L36.5484 21.3757L36.5463 21.3735ZM17.5361 45.4689H17.5616C17.7082 45.4689 17.8527 45.4838 17.9929 45.5093L17.9781 45.5072C19.1341 45.8047 20.0861 46.5229 20.6832 47.4855L20.6938 47.5047L23.1099 51.9225L23.1184 51.931C24.0896 53.5737 25.1329 54.9953 26.2996 56.3064L26.2762 56.2788C27.3174 57.3838 28.0187 58.8203 28.2078 60.414L28.2121 60.448V60.465C28.1866 62.2012 26.9094 63.6334 25.2456 63.899L25.2264 63.9012C24.8014 63.967 24.3084 64.0032 23.8091 64.0032C21.9879 64.0032 20.2837 63.508 18.8217 62.6432L18.8663 62.6687C16.6287 61.7315 14.0319 61.1514 11.3119 61.0707H11.2801C10.4896 61.0175 9.80105 60.6138 9.36543 60.0167L9.36118 60.0103C9.24643 59.6405 9.18055 59.2155 9.18055 58.7735C9.18055 58.0298 9.36755 57.3307 9.69905 56.7208L9.68843 56.7442V56.7335L9.6948 56.725C9.78193 56.3255 9.83293 55.8644 9.83293 55.3927C9.83293 54.8104 9.75643 54.2473 9.61193 53.7118L9.62255 53.7564C9.53543 53.4377 9.48443 53.07 9.48443 52.6897C9.48443 52.1754 9.5758 51.6845 9.7458 51.2298L9.7373 51.2595C10.1623 50.3734 10.7892 50.197 11.5691 49.8443C12.4998 49.5617 13.3094 49.1345 14.0149 48.5842L13.9979 48.5969H14.0022V48.5905C14.6822 47.8787 15.1837 46.9947 15.7766 46.3657C16.1909 45.8365 16.8221 45.4944 17.5339 45.4732H17.5382L17.5361 45.4689ZM46.2533 45.3393C46.2512 45.3754 46.2512 45.42 46.2512 45.4647C46.2512 47.0435 47.2053 48.3993 48.5696 48.9879L48.595 48.9985C48.697 49.0049 48.816 49.0092 48.935 49.0092C50.7009 49.0092 52.2819 48.2208 53.3444 46.9755L53.3508 46.967L53.9118 46.9415C54.0244 46.9245 54.154 46.916 54.2858 46.916C55.0104 46.916 55.6713 47.1965 56.1622 47.6555L56.16 47.6534L56.1686 47.6619C56.6977 48.3015 57.0653 49.092 57.2034 49.9612L57.2077 49.9888C57.3246 51.0619 57.7134 52.0288 58.3063 52.8363L58.2957 52.8193C59.1797 53.5758 59.7938 54.6255 59.9808 55.8177L59.9851 55.8453L59.9936 55.8262V55.8729L59.9851 55.841C59.9447 56.5359 59.4942 56.8929 58.6633 57.422C56.1473 58.4782 53.9862 59.8828 52.1247 61.604L52.1396 61.5913C50.8476 63.2743 48.9499 64.4367 46.7782 64.749L46.7335 64.7533C46.5763 64.7745 46.3936 64.7873 46.2087 64.7873C44.5767 64.7873 43.1742 63.8013 42.5622 62.3945L42.5516 62.369L42.5388 62.3605C42.3412 61.7528 42.2285 61.0537 42.2285 60.329C42.2285 59.445 42.3964 58.6014 42.7045 57.8258L42.6875 57.8725C43.1848 56.453 43.6119 54.7573 43.8946 53.0105L43.9179 52.8342C43.9519 51.1087 44.1389 49.449 44.4662 47.8404L44.4364 48.0168C44.6171 46.916 45.2461 45.9895 46.1237 45.4137L46.1385 45.4052L46.2575 45.3478L46.2533 45.3393ZM40.4499 21.552C41.7249 26.1144 43.2953 30.0563 45.2248 33.7857L45.0569 33.4308C46.3596 35.747 47.3732 38.4352 47.9533 41.2827L47.9831 41.4612C48.0022 41.4612 48.0255 41.4612 48.0489 41.4612C48.51 41.4612 48.9563 41.5228 49.3813 41.6397L49.3452 41.6312C49.5789 40.7918 49.7128 39.8292 49.7128 38.8347C49.7128 35.8044 48.4654 33.0632 46.4552 31.1018L46.453 31.0997C45.8687 30.5684 45.8368 30.2093 46.1258 30.2093C48.1892 32.143 49.7149 34.625 50.4714 37.4215L50.4969 37.5299C50.686 38.229 50.7944 39.0323 50.7944 39.861C50.7944 40.6069 50.7073 41.3337 50.5415 42.0285L50.5543 41.9648C50.7115 42.0455 50.8943 42.1072 51.0877 42.1412L51.1004 42.1433C53.8417 43.5607 54.8532 44.6338 54.3666 46.2254V46.1107C54.2072 46.1022 54.0478 46.1107 53.8884 46.1107H53.8459C54.2475 44.8697 53.3636 43.9198 51.0176 42.8594C48.5887 41.7969 46.6464 41.9669 46.3171 44.094C46.2937 44.1982 46.2767 44.3193 46.2703 44.4447V44.451C46.1152 44.5148 45.9303 44.5743 45.7391 44.6168L45.7157 44.621C44.6362 45.335 43.8669 46.4464 43.6141 47.7427L43.6098 47.7724C43.2953 49.2493 43.0977 50.9599 43.0658 52.7088V52.7343V52.7428C42.8724 54.0964 42.5771 55.3077 42.1776 56.4679L42.2201 56.3277C40.1312 58.0362 37.4367 59.0689 34.4978 59.0689C32.0965 59.0689 29.8568 58.3783 27.9677 57.184L28.0187 57.2138C27.7084 56.6762 27.3535 56.2108 26.9498 55.7964L26.9519 55.7985C26.7458 55.4585 26.5036 55.1674 26.2252 54.9167L26.2209 54.9145C26.6608 54.9145 27.0858 54.8487 27.4874 54.7275L27.4556 54.736C27.8381 54.5554 28.1313 54.243 28.2864 53.8605L28.2907 53.8499C28.3289 53.6523 28.3523 53.427 28.3523 53.1954C28.3523 52.2498 27.9804 51.3934 27.3727 50.7602L27.3748 50.7623C26.0594 49.1452 24.4869 47.7979 22.7083 46.7673L22.6276 46.7248C21.2017 45.9003 20.1222 44.6104 19.5888 43.0655L19.5739 43.0188C19.3763 42.343 19.2616 41.5653 19.2616 40.762C19.2616 40.0119 19.3614 39.2852 19.5463 38.5924L19.5336 38.6498C20.3347 35.8575 21.4907 33.4202 22.9761 31.2208L22.9166 31.3122C23.2013 31.14 23.0143 31.6713 21.8328 33.8983C20.8256 35.4134 20.2242 37.277 20.2242 39.2809C20.2242 41.0659 20.7002 42.7383 21.5332 44.1812L21.5077 44.1344C21.6182 41.3528 22.2408 38.7433 23.2799 36.359L23.2268 36.4972C25.4687 32.4554 27.1666 27.7613 28.0612 22.7867L28.1037 22.5083C28.2312 22.6039 28.6796 22.8674 28.8708 23.0438C29.4488 23.3965 29.8802 23.9278 30.4369 24.2784C31.0043 24.8309 31.7821 25.1709 32.6363 25.1709C32.6809 25.1709 32.7255 25.1709 32.7702 25.1688H32.7638C32.8679 25.1773 32.9636 25.1858 33.0549 25.1858C34.0303 25.1667 34.9398 24.9053 35.7303 24.459L35.7027 24.4739C36.4719 24.119 37.0839 23.5878 37.6683 23.4114H37.681C38.8179 23.1033 39.7699 22.4467 40.4436 21.5648L40.4521 21.552H40.4499ZM33.0145 15.8634C33.0209 15.8634 33.0273 15.8634 33.0337 15.8634C34.2428 15.8634 35.3584 16.2608 36.2573 16.9323L36.2424 16.9217C37.0457 17.4189 37.9722 17.8418 38.9518 18.1414L39.0368 18.1627H39.0453C39.5681 18.3964 39.9994 18.7598 40.3075 19.2124L40.3139 19.223V18.8745C40.4117 19.07 40.4712 19.3017 40.4712 19.546C40.4712 19.7543 40.4287 19.9519 40.3543 20.1325L40.3586 20.1219C39.7466 21.1993 38.7542 22.0004 37.5684 22.3489L37.5344 22.3574V22.3617C36.8225 22.7208 36.2042 23.2457 35.4774 23.5963C34.7337 24.0425 33.8391 24.306 32.8807 24.306C32.8488 24.306 32.8169 24.306 32.785 24.306H32.7893C32.7425 24.3082 32.6873 24.3103 32.6321 24.3103C32.2623 24.3103 31.9053 24.2444 31.5781 24.1212L31.5993 24.1275C31.2614 23.9427 30.9831 23.7684 30.7132 23.5814L30.7429 23.6027C30.2606 23.1798 29.7293 22.7739 29.1726 22.402L29.1173 22.368V22.3553H29.1046C28.3077 21.9324 27.6808 21.2843 27.2941 20.4938L27.2834 20.4683C27.2261 20.3259 27.1942 20.1602 27.1942 19.988C27.1942 19.5248 27.4322 19.1168 27.7913 18.8788L27.7956 18.8767C28.3906 18.5175 28.8049 18.1563 29.0791 17.9842C29.3553 17.7887 29.4594 17.7143 29.5466 17.6357H29.5508V17.6272C30.1203 16.9068 30.8747 16.3543 31.7438 16.0419L31.7778 16.0313C32.1476 15.925 32.5726 15.8634 33.0124 15.8592L33.0145 15.8634ZM29.3766 11.3329H29.4722C29.8717 11.3414 30.2393 11.4753 30.5368 11.6942L30.5326 11.6899C30.9129 12.0278 31.2232 12.4379 31.4357 12.9012L31.4442 12.9245C31.6843 13.4452 31.8331 14.0508 31.8501 14.6883V14.6947V14.7053C31.8586 14.803 31.8628 14.9157 31.8628 15.0283C31.8628 15.1622 31.8564 15.296 31.8437 15.4278L31.8458 15.4108V15.6233C31.7672 15.6424 31.6971 15.67 31.6248 15.687C31.2189 15.8549 30.8768 16.0334 30.5517 16.2353L30.5814 16.2183C30.5984 16.1014 30.6069 15.9675 30.6069 15.8315C30.6069 15.7189 30.6006 15.6063 30.5878 15.4958L30.5899 15.5085V15.4682C30.5517 15.1409 30.4752 14.8413 30.3626 14.5587L30.3711 14.582C30.2839 14.3015 30.1309 14.0635 29.9312 13.8744C29.8143 13.7682 29.6592 13.7023 29.4871 13.7023C29.4722 13.7023 29.4573 13.7023 29.4424 13.7044H29.4446H29.3893C29.1704 13.7278 28.9877 13.8638 28.8963 14.0508L28.8942 14.055C28.7306 14.2527 28.6179 14.497 28.5754 14.7648V14.7733C28.5266 14.956 28.5011 15.1664 28.5011 15.3832C28.5011 15.4767 28.5053 15.5702 28.5159 15.6615V15.6509V15.6913C28.5499 16.0185 28.6264 16.3203 28.7369 16.6008L28.7284 16.5774C28.8177 16.8579 28.9686 17.098 29.1683 17.2893C29.1938 17.3148 29.2236 17.336 29.2576 17.353H29.2597C29.0833 17.4657 28.9303 17.5847 28.7901 17.7164L28.7922 17.7143C28.6966 17.7993 28.5797 17.863 28.4501 17.8928L28.4437 17.8949C28.1823 17.5825 27.9401 17.2319 27.7318 16.8622L27.7148 16.8282C27.4747 16.3075 27.3259 15.704 27.3026 15.0644V15.0559C27.2941 14.9539 27.2898 14.8349 27.2898 14.7138C27.2898 14.2017 27.3727 13.7087 27.5236 13.2475L27.5151 13.2815C27.6723 12.7333 27.9294 12.2594 28.2716 11.8557L28.2673 11.862C28.5372 11.5433 28.9324 11.3414 29.3766 11.3308H29.3787L29.3766 11.3329ZM37.2433 11.1757H37.2773C37.2794 11.1757 37.2816 11.1757 37.2858 11.1757C37.8702 11.1757 38.4057 11.3733 38.8349 11.7048L38.8286 11.7005C39.3152 12.0767 39.7062 12.5505 39.9803 13.0924L39.9909 13.1158C40.2481 13.681 40.4074 14.3377 40.4308 15.0304V15.0389C40.4308 14.9858 40.4457 14.9327 40.4457 14.8795V15.1579L40.4351 15.1027L40.4244 15.0389C40.4181 15.7189 40.2735 16.3607 40.0143 16.945L40.0271 16.9153C39.8953 17.2617 39.704 17.5592 39.4618 17.8057C39.398 17.7674 39.3194 17.7313 39.2408 17.6994L39.2281 17.6952C38.9412 17.6059 38.6904 17.4848 38.4631 17.336L38.4737 17.3424C38.3101 17.2744 38.1146 17.2149 37.9127 17.1703L37.8893 17.166C38.0614 17.0045 38.2208 16.8324 38.3674 16.6497L38.3759 16.639C38.5098 16.3245 38.5927 15.9612 38.6097 15.5787V15.5723V15.5192C38.6097 15.5022 38.6097 15.4852 38.6097 15.466C38.6097 15.1048 38.5502 14.7584 38.4397 14.4354L38.4461 14.4588C38.3122 14.1209 38.1486 13.8298 37.9531 13.5642L37.9615 13.5748C37.7767 13.3878 37.5323 13.2603 37.2582 13.2242H37.2518H37.2093C37.2072 13.2242 37.2029 13.2242 37.2008 13.2242C36.9203 13.2242 36.6695 13.3623 36.5166 13.5727L36.5144 13.5748C36.2679 13.8149 36.0809 14.1124 35.9747 14.446L35.9704 14.4609C35.8365 14.7733 35.7494 15.1367 35.7324 15.5149V15.5213V15.5723C35.7367 15.8273 35.7558 16.0738 35.7898 16.3139L35.7855 16.282C35.2734 16.1035 34.6232 15.9229 34.1727 15.7465C34.1472 15.5914 34.1302 15.4087 34.1259 15.2217V15.2153V15.1622C34.1238 15.1197 34.1238 15.0708 34.1238 15.0219C34.1238 14.3334 34.2704 13.681 34.5361 13.0924L34.5233 13.1222C34.7486 12.5293 35.1459 12.0427 35.6538 11.7133L35.6644 11.7069C36.0979 11.3754 36.6483 11.1757 37.2433 11.1757ZM35.8387 2.13379C35.4264 2.13379 35.0014 2.15504 34.5637 2.18904C23.3416 3.07304 26.3187 14.9539 26.1466 18.9128C26.0403 21.943 25.0118 24.7119 23.3309 26.9708L23.3586 26.9325C20.3687 30.3368 17.9292 34.3148 16.2377 38.6689L16.1463 38.9388C15.5981 40.3944 15.2793 42.0753 15.2793 43.8305C15.2793 44.4362 15.3176 45.0333 15.3898 45.6177L15.3834 45.5475C15.2644 45.6453 15.1646 45.7643 15.0944 45.9003L15.0923 45.9067C14.4017 46.6185 13.8981 47.5004 13.3307 48.1337C12.7293 48.5948 12.0238 48.9582 11.2588 49.1834L11.2142 49.194C10.2282 49.4894 9.42493 50.1333 8.9298 50.9812L8.91918 51.0003C8.69818 51.4508 8.56855 51.9799 8.56855 52.5409C8.56855 52.5622 8.56855 52.5813 8.56855 52.6025C8.5728 53.1083 8.6238 53.597 8.72368 54.073L8.71518 54.0242C8.83418 54.4895 8.90218 55.025 8.90218 55.5754C8.90218 55.9367 8.87243 56.2915 8.81505 56.6379L8.8193 56.5997C8.46443 57.2648 8.2583 58.0553 8.2583 58.8947C8.2583 59.4854 8.3603 60.0507 8.54943 60.5755L8.5388 60.5415C9.11893 61.366 9.99655 61.9483 11.0123 62.1332L11.0357 62.1374C13.7429 62.3648 16.2441 62.93 18.6028 63.7949L18.4031 63.7312C19.8863 64.613 21.6734 65.1337 23.5796 65.1337C24.2043 65.1337 24.8163 65.0784 25.4113 64.97L25.3497 64.9785C26.7671 64.6577 27.923 63.7333 28.5457 62.4944L28.5584 62.4668C30.1182 62.4583 31.8246 61.7528 34.5594 61.5807C36.4146 61.4277 38.7393 62.2904 41.4019 62.1119C41.4805 62.4498 41.5847 62.7452 41.7164 63.0235L41.7037 62.9959L41.7122 63.0044C42.5282 64.7129 44.2409 65.8732 46.2257 65.8732C46.3978 65.8732 46.5678 65.8647 46.7357 65.8477L46.7144 65.8498C49.1603 65.4885 51.2598 64.2178 52.6921 62.4009L52.7069 62.3818C54.4983 60.7498 56.5893 59.4047 58.88 58.4442L59.0224 58.391C59.9404 57.9852 60.5992 57.1479 60.7437 56.1407L60.7458 56.1258C60.6204 54.651 59.9128 53.3654 58.8588 52.4793L58.8503 52.4729V52.2158L58.8418 52.2073C58.3871 51.506 58.0683 50.673 57.9472 49.7805L57.9429 49.7487C57.8303 48.6585 57.3522 47.6959 56.636 46.9713H56.6276C56.4703 46.8289 56.3003 46.7928 56.1282 46.6122C55.9879 46.5123 55.8137 46.4507 55.6246 46.4422C56.0389 45.1629 56.2769 43.6924 56.2769 42.1645C56.2769 40.167 55.8668 38.2652 55.1273 36.5397L55.1634 36.6332C53.6674 33.0802 51.723 30.0223 49.3579 27.349L49.3877 27.3852C47.0396 25.0859 45.5032 21.9643 45.2482 18.4878L45.246 18.4432C45.3162 12.729 45.8729 2.15716 35.8344 2.14229L35.8387 2.13379Z" fill="#D9DBDE"/>
</svg>
`};typeof window<"u"&&(window.Alpine=V1,window.iconComponent=(e="logo",t="")=>({iconName:e,tailwindClasses:t,get icon(){const n=n6[this.iconName];return n?n(this.tailwindClasses):""}}),V1.start());const D2=document.querySelector(".menu_trigger"),K=document.querySelector(".mobile_menu");function N2(){K?.classList.remove("open_menu")}D2?.addEventListener("click",e=>{e.stopPropagation(),K?.classList.toggle("open_menu")});window.addEventListener("click",e=>{const t=e.target;K?.classList.contains("open_menu")&&!K.contains(t)&&!D2?.contains(t)&&N2()});K&&K.querySelectorAll("a").forEach(t=>{t.addEventListener("click",N2)});
